
&НаСервереБезКонтекста
Функция ПолучитьРасписание(Знач ИдентификаторРегламентногоЗадания)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат РегламентныеЗаданияСервер.РасписаниеРегламентногоЗадания(
		ИдентификаторРегламентногоЗадания);
	
КонецФункции

&НаСервере
Функция ЗапускФоновогоЗаданияПолученияРегламентныхЗаданий()
	ИдентификаторЗадания  = Неопределено;
	
	ТаблицаФоновыхЗаданий	= Новый ТаблицаЗначений();
	ТаблицаФоновыхЗаданий.Колонки.Добавить("Идентификатор");
	ТаблицаФоновыхЗаданий.Колонки.Добавить("Предопределенное");
	ТаблицаФоновыхЗаданий.Колонки.Добавить("Ключ");
	ТаблицаФоновыхЗаданий.Колонки.Добавить("Наименование");
	ТаблицаФоновыхЗаданий.Колонки.Добавить("Использование");
	ТаблицаФоновыхЗаданий.Колонки.Добавить("Расписание");
	ТаблицаФоновыхЗаданий.Колонки.Добавить("ИнтервалПовтораПриАварийномЗавершении");
	ТаблицаФоновыхЗаданий.Колонки.Добавить("КоличествоПовторовПриАварийномЗавершении");
	ТаблицаФоновыхЗаданий.Колонки.Добавить("УникальныйИдентификаторПоследнегоФЗ");
	ТаблицаФоновыхЗаданий.Колонки.Добавить("СостояниеВыполнения");
	ТаблицаФоновыхЗаданий.Колонки.Добавить("ДатаОкончания");
	ТаблицаФоновыхЗаданий.Колонки.Добавить("ИмяПользователя");
	ТаблицаФоновыхЗаданий.Колонки.Добавить("ИмяЗадания");
	ТаблицаФоновыхЗаданий.Колонки.Добавить("Параметризуемое");
	ТаблицаФоновыхЗаданий.Колонки.Добавить("ДатаНачала");
	
	ПараметрыДлительнойОперации = Новый Структура;
	ПараметрыДлительнойОперации.Вставить("Таблица", ТаблицаФоновыхЗаданий);
	ПараметрыДлительнойОперации.Вставить("ОтключенныеЗадания", Новый СписокЗначений);
	ПараметрыДлительнойОперации.Вставить("ИдентификаторРегламентногоЗадания", ИдентификаторЗадания);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторЗадания);
	ПараметрыВыполнения.ОжидатьЗавершение = 0; // запускать сразу
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Формирование таблицы регламентных заданий'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("РегламентныеЗаданияСлужебный.СформироватьТаблицуРегламентныхЗаданий",
		ПараметрыДлительнойОперации, ПараметрыВыполнения);
	
КонецФункции

&НаСервере
Функция НайтиРегламентноеЗаданиеИПолучитьЕгоРасписаниеСервер()
	ИдентификаторРегламентногоЗадания = Неопределено;
	//РегламентныеЗадание = ЗагрузкаРегламентныхЗаданий();
	//РегламентныеЗадание.НайтиСтроки();
	Возврат ПолучитьРасписание(ИдентификаторРегламентногоЗадания);
КонецФункции

&НаСервере
Процедура ОбработатьРезультатПолученияРегламентныхЗаданий(ПараметрыЗадания)
	Результат = ПолучитьИзВременногоХранилища(ПараметрыЗадания.АдресРезультата);
	ТаблицаРегламентныеЗадания.Загрузить(Результат.Таблица.Скопировать());
	МассивСНайденнойОБработкой = ТаблицаРегламентныеЗадания.НайтиСтроки( Новый Структура("Наименование", "Дополнительная обработка: SABY_ФЗ / Команда: Обновление статусов") );
	Для Каждого СтрокаФЗ Из МассивСНайденнойОБработкой Цикл
		ИдентификаторРегламентногоЗадания	= СтрокаФЗ.Идентификатор;
		РегламентноеЗаданиеВключено			= СтрокаФЗ.Использование;
		Элементы.ДействиеСРегламентнымЗаданием.Заголовок	= "Настроить расписание";
		Элементы.РегламентноеЗаданиеВключено.Доступность	= Истина;
		Прервать;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучениеРегламентныхЗаданийЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ДействиеСРегламентнымЗаданием.Заголовок = "Скачать обработку";
	Если Результат.Статус = "Выполнено" Тогда
		ОбработатьРезультатПолученияРегламентныхЗаданий(Результат);
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		Элементы.ДействиеСРегламентнымЗаданием.Заголовок = "Ошибка поиска обработки фонового задания";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьРегламентныеЗадания()
	ИдентификаторРегламентногоЗадания	= "";
	РегламентноеЗаданиеВключено		= Ложь;
	ТаблицаРегламентныеЗадания.Очистить();
	Элементы.ДействиеСРегламентнымЗаданием.Заголовок = "Поиск регламентного задания...";
	Элементы.РегламентноеЗаданиеВключено.Доступность = Ложь;
	Результат = ЗапускФоновогоЗаданияПолученияРегламентныхЗаданий();
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект); 
	ПараметрыОжидания.ВыводитьОкноОжидания	= Ложь;
	ОповещениеОЗавершении	= Новый ОписаниеОповещения("ПолучениеРегламентныхЗаданийЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(Результат, ОповещениеОЗавершении, ПараметрыОжидания);
КонецФункции

&НаСервере
Функция ПолучитьРегламентноеЗадание()
	Задание = РегламентныеЗаданияСервер.ПолучитьРегламентноеЗадание(ИдентификаторРегламентногоЗадания);
    Возврат Задание;
КонецФункции

&НаСервере
Функция ПолучитьРасписаниеРегламентногоЗадания()
	Расписание = Неопределено;
	Задание = ПолучитьРегламентноеЗадание();
	Если Задание.Метаданные <> Неопределено Тогда
		Расписание = Задание.Расписание;
	КонецЕсли;
	Возврат Расписание;
КонецФункции

&НаСервереБезКонтекста
Процедура ИзменитьРегламентноеЗадание(ИдентификаторРегламентногоЗадания, ПараметрыЗадания)
	УстановитьПривилегированныйРежим(Истина);
	РегламентныеЗаданияСервер.ИзменитьРегламентноеЗадание(ИдентификаторРегламентногоЗадания, ПараметрыЗадания);
КонецПроцедуры

&НаКлиенте
Процедура ИспольваниеРегламентногоЗаданияПриИзменении(Элемент)
	ПараметрыЗадания = Новый Структура("Использование", РегламентноеЗаданиеВключено);
	ИзменитьРегламентноеЗадание(ИдентификаторРегламентногоЗадания, ПараметрыЗадания);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьРегламентноеЗадание(НовоеРасписание)
	ПараметрыЗадания = Новый Структура("Расписание", НовоеРасписание);
	ИзменитьРегламентноеЗадание(ИдентификаторРегламентногоЗадания, ПараметрыЗадания);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытиеРасписаниеЗавершение(НовоеРасписание, Контекст) Экспорт
	Если НовоеРасписание <> Неопределено Тогда
		ЗаписатьРегламентноеЗадание(НовоеРасписание);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДействиеСРегламентнымЗаданиемНажатие(Элемент)
	Если Элементы.ДействиеСРегламентнымЗаданием.Заголовок = "Настроить расписание" Тогда
		Расписание = ПолучитьРасписаниеРегламентногоЗадания();
		Если Расписание = Неопределено Тогда
			Возврат;
		КонецЕсли;
		Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
		Диалог.Показать(Новый ОписаниеОповещения("ОткрытиеРасписаниеЗавершение", ЭтотОбъект));
	ИначеЕсли Элементы.ДействиеСРегламентнымЗаданием.Заголовок = "Скачать обработку" Тогда
		СкачатьАктуальнуюВерсию();
	ИначеЕсли Элементы.ДействиеСРегламентнымЗаданием.Заголовок = "Ошибка поиска обработки фонового задания" Тогда
		ПолучитьРегламентныеЗадания();
	КонецЕсли;
	//При ином заголовке просто выход
КонецПроцедуры

