
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	Если Параметры.Свойство("context_param") Тогда
		context_param = Параметры.context_param;	
	КонецЕсли;
	
	Если Параметры.Свойство("dataСтрокой") Тогда 
		dataСтрокой = Параметры.dataСтрокой;
		ЗаполнитьФильтры();		
	КонецЕсли;		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаАлгоритмов


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьФильтры(Команда)
	СохранитьФильтрыНаСервере();
	Закрыть(dataСтрокой);
КонецПроцедуры  

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ФильтрыПодключения(context_param) Экспорт
	МассивФильтров = Новый Массив;
	Фильтр = Новый Соответствие;
	Фильтр.Вставить("Название","Организация");
	Фильтр.Вставить("ТипИС","Справочники");
	Фильтр.Вставить("ИмяИС","Организации");
	МассивФильтров.Добавить(Фильтр);
	Возврат МассивФильтров; 
КонецФункции

&НаСервере
Процедура ЗаполнитьФильтры()
	МодульОбъекта = ПолучитьМодульОбъекта(); 
	Data = МодульОбъекта.local_helper_json_loads(dataСтрокой);  
	МассивФильтров = ФильтрыПодключения(context_param);
	ФильтрЗначения = Data.Получить("Filter");
	ТаблицаФильтров = МодульОбъекта.ТаблицаФильтровПодключения(ФильтрЗначения);
	
	Для Каждого Фильтр ИЗ МассивФильтров Цикл
		ДобавляемыеРеквизиты = Новый Массив;
		ТипИС = Фильтр.Получить("ТипИС");
		ИмяИС = Фильтр.Получить("ИмяИС");
		Если ТипИС = "Справочники" Тогда
			ТипЗначенияФильтра = "СправочникСсылка."+ИмяИС;
		Иначе
			Продолжить;
		КонецЕсли;	
		НазваниеФильтра = Фильтр.Получить("Название");
		ПредставлениеФильтра = Фильтр.Получить("Представление");
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип(ТипЗначенияФильтра)); 
		ОписаниеПоля = Новый ОписаниеТипов(МассивТипов);
		НовыйРеквизит = Новый РеквизитФормы(НазваниеФильтра,ОписаниеПоля,,ПредставлениеФильтра); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит); 
		ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить(НазваниеФильтра, Тип("ПолеФормы"),Элементы.ГруппаФильтры);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = НазваниеФильтра;
		
		НайденноеЗначениеФильтра = ТаблицаФильтров.Найти(НазваниеФильтра);
		Если НайденноеЗначениеФильтра <> Неопределено Тогда
		 	ЭтаФорма[НовыйРеквизит.Имя] = НайденноеЗначениеФильтра.Значение; 
		КонецЕсли;
	КонецЦикла;		
КонецПроцедуры

&НаСервере
Процедура СохранитьФильтрыНаСервере()
	МодульОбъекта = ПолучитьМодульОбъекта(); 
	Data = МодульОбъекта.local_helper_json_loads(dataСтрокой);
	Фильтр = Data.Получить("Filter");
	Если Фильтр = Неопределено Тогда
		Фильтр = Новый Соответствие;
	КонецЕсли;
	ПредставлениеФильтра = "";
	Для Каждого Элемент ИЗ Элементы.ГруппаФильтры.ПодчиненныеЭлементы Цикл
		НазваниеФильтра = Элемент.Имя;
		ЗначениеФильтра = ЭтаФорма[НазваниеФильтра];
		Если ЗначениеЗаполнено(ЗначениеФильтра) Тогда
			ПредставлениеФильтра = ПредставлениеФильтра +НазваниеФильтра+": "+ Строка(ЗначениеФильтра)+"; ";
			Api3Object = МодульОбъекта.Api3Object(ЗначениеФильтра,Неопределено,ИСТИНА);	
			Если Фильтр.Получить(НазваниеФильтра) = Неопределено Тогда
				Фильтр.Вставить(НазваниеФильтра, Новый Соответствие);
			КонецЕсли;  
			Фильтр[НазваниеФильтра].Вставить("Api3Link",Api3Object);
		КонецЕсли;	
	КонецЦикла;
	Фильтр.Вставить("description", ПредставлениеФильтра); 
    Data.Вставить("Filter", Фильтр); 
	dataСтрокой = МодульОбъекта.encode_xdto_json(Data);
КонецПроцедуры

#Область include_core_base_Helpers_FormGetters
#КонецОбласти

#КонецОбласти
