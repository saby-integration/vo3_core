
&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	context_params = НастройкиПодключенияПрочитать();
	link			= api_url+"/!ping/";
	context_params.Вставить("password",	password);
	context_params.Вставить("login",		login);
	context_params.Вставить("api_url",	api_url);

	context_params.Удалить("Proxy");
	Если Не ПустаяСтрока(ProxyProtocol) И  Не ПустаяСтрока(ProxyServer) И (ProxyPort > 0 И ProxyPort <= 65535) Тогда
		Proxy	= Новый Структура("Protocol, Server, Port, User, Password",
			ProxyProtocol, ProxyServer, ProxyPort, ProxyLogin, ProxyPassword);
		context_params.Вставить("Proxy", Proxy);
	КонецЕсли;
	ОтветСервера = Неопределено;
	Попытка
		ОтветСервера = ПроверитьПодключениеНаСервере(context_params, link);
	Исключение
		ИнфОбОшибке = ИнформацияОбОшибке();
		СтруктураОшибки = ExtExceptionAnalyse(ИнфОбОшибке);
		ПоказатьОповещениеПользователя(
			"Ошибка",,СтруктураОшибки.message,
			БиблиотекаКартинок["Saby_Ошибка32"],
			СтатусОповещенияПользователя.Важное,);
		Возврат;
	КонецПопытки;

	Если ОтветСервера <> Неопределено Тогда
		//Обработываетя корень домена, т.ч. ни каких ошибок быть не может
		//только 307, редирект на авторизацию
		Если ОтветСервера.code = 200 Тогда
			ПоказатьОповещениеПользователя(
				"Проверка сервисов",,"Проверка доступа к SABY прошла успешно.",
				БиблиотекаКартинок["Saby_Успешно32"],
				СтатусОповещенияПользователя.Важное,);
		Иначе
			ПоказатьОповещениеПользователя(
				"Проверка сервисов",,"Проверка доступа к SABY завершилась с ошибкой. Error code - "+Формат(ОтветСервера.code),
				БиблиотекаКартинок["Saby_Ошибка32"],
				СтатусОповещенияПользователя.Важное,);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НастройкиПодключенияПрочитать()
	МодульОбр		= ПолучитьМодульОбъекта();
	context_params	= МодульОбр.НастройкиПодключенияПрочитать();
	Возврат context_params;
КонецФункции

&НаСервере
Функция ПроверитьПодключениеНаСервере(context_params = Неопределено, link)
	МодульОбр		= ПолучитьМодульОбъекта();
	Если context_params = Неопределено Тогда
		context_params = НастройкиПодключенияПрочитать();
	КонецЕсли;
	response		= МодульОбр.local_helper_exec_request("get", link, "text", Неопределено, context_params);
	Возврат response;
КонецФункции

&НаСервере
Процедура ПеречитатьНастройкиПроксиСервераНаСервере()
	МодульОбр		= ПолучитьМодульОбъекта();
	context_params	= МодульОбр.НастройкиПодключенияПрочитать();
	proxy			= get_prop(context_params, "Proxy");
	ProxyProtocol	= get_prop(proxy, "Protocol", "");
	ProxyServer		= get_prop(proxy, "Server", "");
	ProxyPort		= get_prop(proxy, "Port", 0);
	ProxyLogin		= get_prop(proxy, "User", "");
	ProxyPassword	= get_prop(proxy, "Password", "");
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьНастройкиПроксиСервера(Команда)
	ПеречитатьНастройкиПроксиСервераНаСервере();
КонецПроцедуры

