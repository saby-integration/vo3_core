
&НаКлиенте
Процедура ОбработатьСтатусВыполненияComplete(ДополнительныеПараметры, ТекстОповещения, КартинкаОповещения, СтатусВыполнения)
	Если Не ЗначениеЗаполнено(ТекстОповещения) Тогда
		ТекстОповещения = "Выполнено";
	КонецЕсли;
	
	ДопПараметрыДата = get_prop(ДополнительныеПараметры, "data");
	КартинкаИмя = get_prop(ДопПараметрыДата, "Картинка");
	Если Не ПустаяСтрока(КартинкаИмя) Тогда
		КартинкаОповещения = КартинкаИмя;
	Иначе
		КартинкаОповещения = "ЗеленаяГалка";
	КонецЕсли;
	КоличествоОбработано	= get_prop(ДопПараметрыДата, "CountConfirmed", 0);
	ВсегоОбъектов			= get_prop(ДопПараметрыДата, "CountObjects", 0);
	КоличествоОшибок		= get_prop(ДопПараметрыДата, "CountErrors", 0);
	Если	КоличествоОшибок > 0
		ИЛИ КоличествоОшибок + КоличествоОбработано <> ВсегоОбъектов Тогда
		СтатусВыполнения = "error";
		КартинкаОповещения = "Ошибка32";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОповещениеОЗакрытииФормы(_Параметры)
	ОповещениеОЗакрытииФормы = get_prop(_Параметры,"ОповещениеОЗакрытииФормы");
	Если ТипЗнч(ОповещениеОЗакрытииФормы) = Тип("Строка") Тогда
		Оповестить(ОповещениеОЗакрытииФормы);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСтатусВыполнено(ДополнительныеПараметры, ТекстОповещения, КартинкаОповещения, _Параметры)
	СтатусВыполнения = get_prop(ДополнительныеПараметры, "status");
	СообщитьПрогрессОперации(,,Новый Структура("Прогресс", 100));
	
	Если СтатусВыполнения = "run" Тогда
		// Выполняем команду через оповещение
		Контекст = Новый Структура;
		Контекст.Вставить("step", ДополнительныеПараметры.step);
		
		ВыполнитьКоманды_Клиент(
		Новый ОписаниеОповещения("Подключаемый_ПроверитьВыполнениеЗаданияПослеВыполненияКоманды", ЭтаФорма, Контекст),
		ДополнительныеПараметры.commands,
		ДополнительныеПараметры.commands_data);
		
		Возврат;
	КонецЕсли;	
	
	Если СтатусВыполнения = "error" Тогда
		//TODO отвратительно
		РезультатВыгрузки = ДополнительныеПараметры.data;
		КартинкаОповещения = "Ошибка32";
		
		Если ТипЗнч(РезультатВыгрузки.detail) = Тип("Строка") Тогда
			ТекстОповещения = СокрЛП(РезультатВыгрузки.message) + ". " +  СокрЛП(РезультатВыгрузки.detail);
		Иначе	
			ТекстОповещения = СокрЛП(РезультатВыгрузки.message) + ". ";
		КонецЕсли;
		// 
		МодульCore().ExtExceptionToJournal(РезультатВыгрузки);
	КонецЕсли;
	
	Если СтатусВыполнения = "complete" Тогда 
		ОбработатьСтатусВыполненияComplete(ДополнительныеПараметры, ТекстОповещения,КартинкаОповещения, СтатусВыполнения);			
	КонецЕсли;
	
	МодульФоновогоЗаданияСервер().ПрогрессФЗУстановитьКартинкуОповещения(КартинкаОповещения);
	//Сообщений об ошибке может быть несколько
	СообщенияДата = get_prop(ДополнительныеПараметры, "data");
	мСообщений = get_prop(СообщенияДата, "detail");
	Если ТипЗнч(мСообщений) = Тип("Массив") Тогда
		ТекстОповещения_ = ТекстОповещения;
		Для Каждого ДанныеСообщения Из мСообщений Цикл
			ТекстОповещения		= get_prop(ДанныеСообщения, "message") +" "+ get_prop(ДанныеСообщения, "detail");
			ПоказатьОповещение();
		КонецЦикла;
		ТекстОповещения = ТекстОповещения_;
		ДополнительныеПараметры.data.Вставить("detail", "");
		МодульФоновогоЗаданияСервер().ПрогрессФЗУстановитьДополнительныеПараметры(ДополнительныеПараметры);
	КонецЕсли;
	МодульФоновогоЗаданияСервер().ПрогрессФЗУстановитьТекстОповещения(ТекстОповещения);
	//Итоговое
	ПоказатьОповещение();
	ВыполнитьОповещениеОЗакрытииФормы(_Параметры);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПрочиеСтатусы(_Параметры, ТекстОповещения, ИнтервалОжидания)
	МодульФоновогоЗаданияСервер().ПрогрессФЗУстановитьТекстОповещения(ТекстОповещения);
	Если _Параметры.ВыводитьОкноОжидания <> Истина Тогда
		Возврат;
	КонецЕсли;	
	Если _Параметры.Интервал = 0 Тогда
		ИнтервалОжидания = ИнтервалОжидания * 1.4; 
		ИнтервалОжидания = МИН(ИнтервалОжидания,15);
		МодульФоновогоЗаданияСервер().ПрогрессФЗУстановитьИнтервалОжидания(ИнтервалОжидания);
	КонецЕсли;
	ПодключитьОбработчикОжидания(ИмяОбработчкикаФЗ(), ИнтервалОжидания, Истина);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания(ФормаЗакрывается = Ложь) Экспорт
	
	ПараметрыСеансаРасширения = МодульФоновогоЗаданияСервер().ПрогрессФЗПрочитатьЗначения();
	_Параметры				= ПараметрыСеансаРасширения.Параметры;
	ДополнительныеПараметры	= ПараметрыСеансаРасширения.ДополнительныеПараметры;
	ИнтервалОжидания		= ПараметрыСеансаРасширения.ИнтервалОжидания;
	КартинкаОповещения		= ПараметрыСеансаРасширения.КартинкаОповещения;
	ТекстОповещения			= ПараметрыСеансаРасширения.ТекстОповещения;
	
	Задание = МодульФоновогоЗаданияСервер().ПроверитьЗаданиеВыполнено(ФормаЗакрывается);
	Статус = Задание.Статус;
	МодульФоновогоЗаданияСервер().ПрогрессФЗУстановитьСтатус(Статус);
	
	ДополнительныеПараметры_ = get_prop(Задание.Прогресс, "ДополнительныеПараметры");
	Если ТипЗнч(ДополнительныеПараметры) <> Тип("Структура") Тогда
		ДополнительныеПараметры = Новый Структура();
	КонецЕсли;
	
	Если Задание.Прогресс <> Неопределено Тогда
		Если ТипЗнч(ДополнительныеПараметры_) = Тип("Структура") Тогда
			Для Каждого ЗнчКлюч Из ДополнительныеПараметры_ Цикл
				ДополнительныеПараметры.Вставить(ЗнчКлюч.Ключ, ЗнчКлюч.Значение);
			КонецЦикла;
		КонецЕсли;
		ПрогрессСтрокой = ПрогрессСтрокой(Задание.Прогресс);
		Если Не ПустаяСтрока(ПрогрессСтрокой) Тогда
			//Элементы.ДекорацияПоясняющийТекстДлительнойОперации.Заголовок = ТекстСообщения + Символы.ПС + ПрогрессСтрокой;
			ТекстОповещения = Задание.Прогресс.Текст;
		КонецЕсли;
	КонецЕсли;
	МодульФоновогоЗаданияСервер().ПрогрессФЗУстановитьДополнительныеПараметры(ДополнительныеПараметры);
	
	//// Формы нет
	//Если Задание.Сообщения <> Неопределено И ВладелецФормы <> Неопределено Тогда
	//	ИдентификаторНазначения = ВладелецФормы.УникальныйИдентификатор;
	//	Для каждого СообщениеПользователю Из Задание.Сообщения Цикл
	//		СообщениеПользователю.ИдентификаторНазначения = ИдентификаторНазначения;
	//		СообщениеПользователю.Сообщить();
	//	КонецЦикла;
	//	Задание.Сообщения = Новый ФиксированныйМассив(Новый Массив);
	//КонецЕсли;
	
	Если Статус = "Выполнено" Тогда
        ОбработатьСтатусВыполнено(ДополнительныеПараметры, ТекстОповещения, КартинкаОповещения, _Параметры);
		Возврат;	
	ИначеЕсли Статус = "Ошибка" Тогда	
		// Как передавать параметр обратно???
		//Закрыть(РезультатВыполнения(Задание));
		ВыполнитьОповещениеОЗакрытииФормы(_Параметры);
		Если ВозвращатьРезультатВОбработкуВыбора() Тогда
			ВызватьИсключение Задание.КраткоеПредставлениеОшибки;
		КонецЕсли;
		Возврат;
	Иначе
		ОбработатьПрочиеСтатусы(_Параметры, ТекстОповещения, ИнтервалОжидания);	
	КонецЕсли;
	
КонецПроцедуры
