
&НаСервереБезКонтекста
Функция ПолучитьРасписание(Знач ИдентификаторРегламентногоЗадания)
	УстановитьПривилегированныйРежим(Истина);
	Возврат РегламентныеЗаданияСервер.РасписаниеРегламентногоЗадания(
		ИдентификаторРегламентногоЗадания);
КонецФункции

&НаСервере
Функция НайтиРегламентноеЗаданиеИПолучитьЕгоРасписаниеСервер()
	ИдентификаторРегламентногоЗадания = Неопределено;
	Возврат ПолучитьРасписание(ИдентификаторРегламентногоЗадания);
КонецФункции

#Область include_core_base_РегламентныеЗаданияСведения
#КонецОбласти

&НаКлиенте
Функция ПоискРегламентногоЗадания()
	ИдентификаторРегламентногоЗадания	= "";
	РегламентноеЗаданиеВключено		= Ложь;
	ЭлементыФормочки = ПолучитьЭлементыФормы();
	ЭлементыФормочки.ДействиеСРегламентнымЗаданием.Заголовок = "Регламентное задание отсутствует";
	ЭлементыФормочки.РегламентноеЗаданиеВключено.Доступность = Ложь;
	ПоискРегламентногоЗаданияСервер();
	Если НЕ ПустаяСтрока(ИдентификаторРегламентногоЗадания) Тогда
		ЭлементыФормочки.ДействиеСРегламентнымЗаданием.Заголовок = "Настроить расписание";
		ЭлементыФормочки.РегламентноеЗаданиеВключено.Доступность = Истина;
	КонецЕСли;	
КонецФункции

&НаСервере
Функция ПоискРегламентногоЗаданияСервер()
	// Ищем  - "Обновление статусов"
	УстановитьПривилегированныйРежим(Истина); //Необходимо пользователям с отсутствием полных прав
	Отбор = Новый Структура("Ключ",	ПолучитьИмяПродукта()+"_АвтоматическоеОбновлениеСтатусов");
	НайденныеРегЗадания = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Отбор);
	Если ЗначениеЗаполнено(НайденныеРегЗадания) Тогда
		ИдентификаторРегламентногоЗадания	= НайденныеРегЗадания[0].УникальныйИдентификатор;
		РегламентноеЗаданиеВключено			= НайденныеРегЗадания[0].Использование;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьРегламентноеЗадание()
	Задание = РегламентныеЗаданияСервер.ПолучитьРегламентноеЗадание(ИдентификаторРегламентногоЗадания);
    Возврат Задание;
КонецФункции

&НаСервере
Функция ПолучитьРасписаниеРегламентногоЗадания()
	Расписание = Неопределено;
	Задание = ПолучитьРегламентноеЗадание();
	Если Задание.Метаданные <> Неопределено Тогда
		Расписание = Задание.Расписание;
	КонецЕсли;
	Возврат Расписание;
КонецФункции

&НаКлиенте
Процедура ИспольваниеРегламентногоЗаданияПриИзменении(Элемент)
	ПараметрыЗадания = Новый Структура("Использование", РегламентноеЗаданиеВключено);
	ИзменитьРегламентноеЗадание(ИдентификаторРегламентногоЗадания, ПараметрыЗадания);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьРегламентноеЗадание(НовоеРасписание)
	ПараметрыЗадания = Новый Структура("Расписание", НовоеРасписание);
	ИзменитьРегламентноеЗадание(ИдентификаторРегламентногоЗадания, ПараметрыЗадания);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытиеРасписаниеЗавершение(НовоеРасписание, Контекст) Экспорт
	Если НовоеРасписание <> Неопределено Тогда
		ЗаписатьРегламентноеЗадание(НовоеРасписание);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДействиеСРегламентнымЗаданиемНажатие(Элемент)
	Расписание = ПолучитьРасписаниеРегламентногоЗадания();
	Если Расписание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	Диалог.Показать(Новый ОписаниеОповещения("ОткрытиеРасписаниеЗавершение", ЭтотОбъект));
	//При ином заголовке просто выход
КонецПроцедуры

