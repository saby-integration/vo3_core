
Процедура СоздатьДополнительноеСвойствоКЭДО()
	ИмяСвойства	= "КЭДО";
	УстановитьПривилегированныйРежим(Истина);

	// Установим константу использования Доп реквизитов и сведений
	ИспользованиеСвИДопЗнч = Константы.ИспользоватьДополнительныеРеквизитыИСведения.СоздатьМенеджерЗначения();
	ИспользованиеСвИДопЗнч.Прочитать();
	ИспользованиеСвИДопЗнч.Значение = Истина;
	ИспользованиеСвИДопЗнч.Записать();
	
	//Настроим отображение элемента КЭДО в справочнике сотрудников
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НДРС.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений КАК НДРС
		|ГДЕ
		|	НДРС.ИмяПредопределенногоНабора = ""Справочник_Сотрудники"" ";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	РазделИнтерфейса = Неопределено;
	Для Каждого СтрокаРЗ Из РезультатЗапроса Цикл
		РазделИнтерфейса = СтрокаРЗ.Ссылка;
	КонецЦикла;
	//Создание/обновление расположения в пользовательском интерфейсе 
	Если РазделИнтерфейса = Неопределено Тогда
		РазделИнтерфейса	= Справочники.НаборыДополнительныхРеквизитовИСведений.СоздатьЭлемент();
	Иначе
		РазделИнтерфейса	= РазделИнтерфейса.ПолучитьОбъект();
	КонецЕсли;
	РазделИнтерфейса.Наименование	= "Сотрудники";
	РазделИнтерфейса.Используется	= Истина;
	РазделИнтерфейса.ИмяПредопределенногоНабора	= "Справочник_Сотрудники";
	РазделИнтерфейса.ИмяПредопределенногоНабора	= "Справочник_Сотрудники";
	РазделИнтерфейса.Записать();
	РазделИнтерфейса = РазделИнтерфейса.Ссылка;
	
	// Создадим/обновим - свойство
	НайденноеСвойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию( ИмяСвойства, Истина );
	Если НЕ ЗначениеЗаполнено(НайденноеСвойство) Тогда
		//
		НовПВХ = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
		ТипСвойства			= Новый ОписаниеТипов("Булево");
		НовПВХ.Наименование	= ИмяСвойства;
		НовПВХ.Заголовок	= ИмяСвойства;
		НовПВХ.Имя			= ИмяСвойства;
		НовПВХ.ТипЗначения	= ТипСвойства;
		НовПВХ.НаборСвойств	= РазделИнтерфейса;
        НовПВХ.ЭтоДополнительноеСведение = Истина;        
        НовПВХ.Записать();
		НайденноеСвойство	= НовПВХ.Ссылка;
	КонецЕсли;
	
	// Установим связанное свойство зависимость в табличной части справочника
	// отвечающего за нахождение свойства в интерфейсе
	РазделИнтерфейса	= РазделИнтерфейса.ПолучитьОбъект();
	мЭлементов = РазделИнтерфейса.ДополнительныеСведения.НайтиСтроки(Новый Структура("Свойство",НайденноеСвойство));
	Если мЭлементов.Количество() = 0 Тогда
		СтрокаДопСведений = РазделИнтерфейса.ДополнительныеСведения.Добавить();
		СтрокаДопСведений.Свойство						= НайденноеСвойство;
		СтрокаДопСведений.ПометкаУдаления				= Ложь;
		СтрокаДопСведений.ИмяПредопределенногоНабора	= "Справочник_Сотрудники";
	КонецЕсли;
	РазделИнтерфейса.КоличествоСведений	= РазделИнтерфейса.ДополнительныеСведения.Количество();
	РазделИнтерфейса.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

Функция НайтиСвойствоПоИмени( ИмяСвойства ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	НайденноеСВо = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту( "Имя", ИмяСвойства );
	Возврат НайденноеСВо;
	
КонецФункции

Функция ПолучитьЗначениеСвойства( ОбъектСсылка, ИмяСвойства, ЗначениеПоУмолчанию = Неопределено ) Экспорт
	
	Если Не ЗначениеЗаполнено(ОбъектСсылка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос			= Новый Запрос;
	Запрос.Текст	= 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ДС.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.ДополнительныеСведения КАК ДС
		|ГДЕ
		|	ДС.Свойство.Имя = &ИмяСвойства
		|	И ДС.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", ОбъектСсылка);
	Запрос.УстановитьПараметр("ИмяСвойства", ИмяСвойства );
	ВДЗ = Запрос.Выполнить().Выбрать();
	ЗначениеСВа	= ЗначениеПоУмолчанию;
	Пока ВДЗ.Следующий() Цикл
		ЗначениеСВа	= ВДЗ.Значение;
		Прервать;
	КонецЦикла;
	
	Возврат ЗначениеСВа;
			
КонецФункции

Функция УстановитьЗначениеСвойства( ОбъектСсылка, ИмяСвойства, Значение ) Экспорт
	
	Если Не ЗначениеЗаполнено(ОбъектСсылка) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	НовМЗ			= РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
	НовМЗ.Объект	= ОбъектСсылка;
	НовМЗ.Свойство	= НайтиСвойствоПоИмени( ИмяСвойства );
	НовМЗ.Значение	= Значение;
	
	СтатусОперации = Ложь;
	Попытка
		НовМЗ.Записать(Истина);
		СтатусОперации = Истина;
	Исключение
		СтатусОперации = Ложь;
	КонецПопытки;
	
	Возврат СтатусОперации;
	
КонецФункции

