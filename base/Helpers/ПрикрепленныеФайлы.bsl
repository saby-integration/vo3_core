
// Возвращает записи присоединенных файлов объекта.
//
// Параметры:
//  Объект                       - Ссылка - ссылка на объект, который может содержать присоединенные файлы,
//                               - Массив - массив ссылок на объекты.
//  ИменаФайлов                  - Неопределено - не учитывается дата изменений файлов.
//                               - Массив - массив строк с именами файлов, которые нужно получить.
//  ИзмененныеПосле              - Неопределено - не учитывается дата изменений файлов.
//                               - Дата - берутся только файлы с датой больше указанной.
//  ДобавочныеИменаСправочников  - Строка - имена справочников присоединенных файлов с реквизитами владельца
//                                 через запятую, требуется в дополнение к имени справочника по умолчанию,
//                                 в формате "ИмяСправочника.ИмяРеквизитаВладельцаФайла, ... "
//                                 если не указано ИмяРеквизитаВладельцаФайла, то используется "ВладелецФайла",
//                               = "" - будет использоваться имя справочника по умолчанию 
//                                 с именем реквизита владельца по умолчанию.
//  ВключатьПомеченныеНаУдаление - Булево - при значении Истина возвращать также помеченные на удаление.
//
// Возвращаемое значение:
//  Массив                       - массив ссылок на присоединенные файлы
//
Функция ПрикрепленныеФайлыКОбъекту(Объект, ИменаФайлов = Неопределено, ИзмененныеПосле = Неопределено,
		Знач ДобавочныеИменаСправочников = "", Знач ВключатьПомеченныеНаУдаление = Ложь) Экспорт
		
	Если НЕ ЗначениеЗаполнено(Объект) Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	// Всегда используем стандартное имя справочника из БСП
	ТипВладельцаФайлов = ТипЗнч(Объект);
	Если ТипВладельцаФайлов = Тип("Массив") Тогда
		ТипВладельцаФайлов = ТипЗнч(Объект[0]);
	КонецЕсли;
	МетаданныеВладельца = Метаданные.НайтиПоТипу(ТипВладельцаФайлов);
	Попытка
		ИмяСправочникатаВладельца = МетаданныеВладельца.Имя + "ПрисоединенныеФайлы";
	Исключение
		ВызватьИсключение("Ошибка получения прикрепленных файлов. Не удалось получить тип владельца.");
	КонецПопытки;
	// + заданные дополнительно вызывающим
	Если ЗначениеЗаполнено(ДобавочныеИменаСправочников) Тогда
		ДобавочныеИменаСправочников = ДобавочныеИменаСправочников + ",";
	КонецЕсли;
	ДобавочныеИменаСправочников = ДобавочныеИменаСправочников + ИмяСправочникатаВладельца;
	
	МассивИменСправочников = СтрРазделить82(ДобавочныеИменаСправочников, ",");
	УчтенныеИменаСправочников = "";
	
	ТекстЗапросов = "";
	Для Каждого ЭлементМассива Из МассивИменСправочников Цикл
		
		ИмяСправочника = СокрЛП(ЭлементМассива);
		ИмяРеквизитаВладельца = "";
		Если ИмяСправочника <> ИмяСправочникатаВладельца Тогда
			МассивИмяСправочникаИмяРеквизита = СтрРазделить82(СокрЛП(ЭлементМассива), ".");
			ИмяСправочника = МассивИмяСправочникаИмяРеквизита[0];
			Если МассивИмяСправочникаИмяРеквизита.Количество() > 1 Тогда
				ИмяРеквизитаВладельца = МассивИмяСправочникаИмяРеквизита[1];
			КонецЕсли;
		КонецЕсли;
		
		// Каждый справочник встречается 1 раз
		Если Найти(УчтенныеИменаСправочников, ИмяСправочника + ",") Тогда
			Продолжить;
		Иначе
			УчтенныеИменаСправочников = УчтенныеИменаСправочников + ИмяСправочника + ",";
		КонецЕсли;
		
		// Только существующий справочник с корректным именем и корректным именем реквизита
		Попытка
			МетаданныеСправочник = Метаданные.Справочники.Найти(ИмяСправочника);
			Если МетаданныеСправочник = Неопределено Тогда  
				ИмяСправочника = "ДокументыПрисоединенныеФайлы";
				МетаданныеСправочник = Метаданные.НайтиПоПолномуИмени("Справочник." + ИмяСправочника);
				Если МетаданныеСправочник = Неопределено Тогда
					// КАМИН хранит все вложения по документам в ДокументыПрисоединенныеФайлы, "немного" отойдя от постулатов БСП
					Продолжить;
				КонецЕсли;	
			КонецЕсли;
			Если ЗначениеЗаполнено(ИмяРеквизитаВладельца) Тогда
				Если МетаданныеСправочник.Реквизиты.Найти(ИмяРеквизитаВладельца) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
			Иначе
				Если МетаданныеСправочник.Реквизиты.Найти("ВладелецФайла") = Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		Исключение
			Продолжить;
		КонецПопытки;
		
		Если ЗначениеЗаполнено(ТекстЗапросов) Тогда
			ТекстЗапросов = ТекстЗапросов + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|";
		КонецЕсли;
		
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	ПрисоединенныеФайлы.Ссылка КАК Ссылка
			|ИЗ
			|	&ИмяСправочника КАК ПрисоединенныеФайлы
			|ГДЕ
			|	ПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайлов";
		Если ЗначениеЗаполнено(ИмяРеквизитаВладельца) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВладелецФайла", ИмяРеквизитаВладельца);
		КонецЕсли;
		Если ТипЗнч(Объект) = Тип("Массив") Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "= &ВладелецФайлов", "В (&ВладелецФайлов)");
		КонецЕсли;
		Если НЕ ВключатьПомеченныеНаУдаление Тогда
			ТекстЗапроса = ТекстЗапроса + Символы.ПС + " И НЕ ПрисоединенныеФайлы.ПометкаУдаления";
		КонецЕсли;
		Если ЗначениеЗаполнено(ИзмененныеПосле) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	И (ПрисоединенныеФайлы.ДатаМодификацииУниверсальная > &ИзмененныеПосле
			|	ИЛИ ПрисоединенныеФайлы.ДатаСоздания > &ИзмененныеПосле)";
		КонецЕсли;
		Если ЗначениеЗаполнено(ИменаФайлов) Тогда
			ТекстЗапроса = ТекстЗапроса + Символы.ПС + " И (
				|	ВЫБОР
				|		КОГДА ПрисоединенныеФайлы.Расширение = """"
				|			ТОГДА ПрисоединенныеФайлы.Наименование В (&ИменаФайлов)
				|		ИНАЧЕ
				|			ПрисоединенныеФайлы.Наименование + "".""
				|			+ ПрисоединенныеФайлы.Расширение В (&ИменаФайлов)
				|	КОНЕЦ ) ";
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяСправочника", "Справочник." + ИмяСправочника);
		
		ТекстЗапросов = ТекстЗапросов + ТекстЗапроса;
		
	КонецЦикла;
	
	Попытка
		Запрос = Новый Запрос(ТекстЗапросов);
		Запрос.УстановитьПараметр("ВладелецФайлов", Объект);
		Если ЗначениеЗаполнено(ИзмененныеПосле) Тогда
			Запрос.УстановитьПараметр("ИзмененныеПосле", ИзмененныеПосле);
		КонецЕсли;
		Если ЗначениеЗаполнено(ИменаФайлов) Тогда
			Запрос.УстановитьПараметр("ИменаФайлов", ИменаФайлов);
		КонецЕсли;
		Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Исключение
		ВызватьИсключение("Ошибка получения прикрепленных файлов. Не удалось выполнить запрос.");
	КонецПопытки;
	
КонецФункции

