
//Функция формирует ленту о прохождении документа	
Процедура ЗаполнитьПрохождение(СоставПакета, ДопПараметры = Неопределено) Экспорт
	Перем ПакетСобытие;
	СбисСобытияЛента = Новый СписокЗначений;
	События.Очистить();
	Если get_prop(СоставПакета,"Событие") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СбисСобытия = Новый Соответствие();
	СистемныеСбисСобытия = Новый Массив;
	СистемныеСбисСобытия.Добавить("извещение о получении ");
	СистемныеСбисСобытия.Добавить("загрузка");
	Для Каждого Событие Из СоставПакета["Событие"] Цикл
		КлючСбисСобытия		= "";
		НазваниеСбисСобытия	= Событие["Название"];
		ЭтоСистемноеСобытие	= Ложь;
		ЗаполнитьПодпись	= Истина;
		Для	Каждого	СистемноеСобытие Из СистемныеСбисСобытия Цикл
			Если НРег(Лев(НазваниеСбисСобытия, СтрДлина(СистемноеСобытие))) = СистемноеСобытие Тогда
				ЭтоСистемноеСобытие	= Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЭтоСистемноеСобытие Тогда
			Продолжить;
		КонецЕсли;
		 
		Если		Лев(НазваниеСбисСобытия, 9)  = "Получение" Тогда
			Если Найти(НазваниеСбисСобытия, "аннулирова") Тогда
				НазваниеСбисСобытия = "Запрос на аннулирование";
			Иначе
				НазваниеСбисСобытия = "Отправлено";
				КлючСбисСобытия		= "Отправка1";
			КонецЕсли;
		ИначеЕсли	Лев(НазваниеСбисСобытия, 11) = "Уведомление" Тогда
			КлючСбисСобытия		= "Утверждение";
			Если		Найти(НазваниеСбисСобытия, "о приеме")	Тогда
				НазваниеСбисСобытия	= "Утверждено";
			ИначеЕсли   Найти(НазваниеСбисСобытия, "об уточнении")	Тогда
				НазваниеСбисСобытия	= "Отклонено";
			КонецЕсли;
		ИначеЕсли	Лев(НазваниеСбисСобытия,9)	= "Извещение" Тогда
			Если Найти(НазваниеСбисСобытия, "отправ") Тогда
				НазваниеСбисСобытия = "Отправлено";
				КлючСбисСобытия		= "Отправка1";
			ИначеЕсли Найти(НазваниеСбисСобытия, "получении") Тогда
				КлючСбисСобытия		= "Получение";
				НазваниеСбисСобытия	= "Получено";
			КонецЕсли;
		ИначеЕсли	Лев(НазваниеСбисСобытия,13)	= "Подтверждение" Тогда
			ЗаполнитьПодпись = Ложь;
			Если		Найти(НазваниеСбисСобытия, "даты получения") Тогда
				НазваниеСбисСобытия	= "Получено";
				КлючСбисСобытия		= "Получение";
			ИначеЕсли	Найти(НазваниеСбисСобытия, "даты отправки") Тогда
				НазваниеСбисСобытия = "Отправлено";
				КлючСбисСобытия		= "Отправка1";
			ИначеЕсли	Найти(НазваниеСбисСобытия, "получателю на извещение") Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если	ПустаяСтрока(КлючСбисСобытия) Тогда
			КлючСбисСобытия = СтрЗаменить(НазваниеСбисСобытия, " ", "");
		КонецЕсли;
		СобытиеВставка = СбисСобытия.Получить(КлючСбисСобытия); 
		Если СобытиеВставка = Неопределено Тогда
			СобытиеВставка = Новый Структура;
			СбисСобытия.Вставить(КлючСбисСобытия, СобытиеВставка);
		КонецЕсли;	
		СобытиеВставка.Вставить("Название",		НазваниеСбисСобытия	+ ?(ПустаяСтрока(Событие["Комментарий"]),"",": "	+ Событие["Комментарий"]));
		СобытиеВставка.Вставить("ДатаВремя",	?(ЗначениеЗаполнено(Событие["ДатаВремяДокумента"]),СбисСтрокаВДату(Событие["ДатаВремяДокумента"]),СбисСтрокаВДату(Событие["ДатаВремя"])));
		Если ЗаполнитьПодпись Тогда
			СобытиеВставка.Вставить("Подпись",	СбисИмяСертификата(Событие));
		КонецЕсли;
	КонецЦикла;
	Для Каждого СобытиеПрочее Из СбисСобытия Цикл
		СбисСобытияЛента.Добавить(СобытиеПрочее.Значение, СбисПредставлениеДатыНаСортировку(СобытиеПрочее.Значение.ДатаВремя));
	КонецЦикла;
	СбисСобытияЛента.СортироватьПоПредставлению();
	
	Для Каждого Элемент Из СбисСобытияЛента Цикл
		Если Не ЗначениеЗаполнено(Элемент.Значение) Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтр = События.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтр, Элемент.Значение);
	КонецЦикла;
КонецПроцедуры

Функция СбисИмяСертификата(Событие)
	Перем Результат;
	Если	get_prop(Событие, "Вложение") <> Неопределено
		И	get_prop(Событие["Вложение"][0],"Подпись") <> Неопределено
		И	get_prop(Событие["Вложение"][0]["Подпись"][0],"Сертификат") <> Неопределено Тогда
		Результат = Событие["Вложение"][0]["Подпись"][0]["Сертификат"]["ФИО"];
	ИначеЕсли	get_prop(Событие, "Исполнитель") <> Неопределено Тогда//нет сертификата, проверить наличие исполнителя, взять ФИО оттуда
		Исполнитель = Событие["Исполнитель"];
		Результат	= Исполнитель["Фамилия"];
		Результат	= Результат + ?(ПустаяСтрока(Результат), "", " ") + Исполнитель["Имя"];
		Результат	= Результат + ?(ПустаяСтрока(Результат), "", " ") + Исполнитель["Отчество"];
	Иначе
		Результат = "";
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция СбисПредставлениеДатыНаСортировку(ДатаВремяЗначение)
	Возврат Формат(ДатаВремяЗначение, "ДФ=yyyyMMdd") + Формат(Час(ДатаВремяЗначение)*60*60 + Минута(ДатаВремяЗначение)*60 + Секунда(ДатаВремяЗначение), "ЧЦ=5; ЧДЦ=0; ЧН=; ЧВН=; ЧГ=0");
КонецФункции

Функция СбисСтрокаВДату(ДатаСтрокой) Экспорт
	Если Сред(ДатаСтрокой,3,1)="." и Сред(ДатаСтрокой,6,1)="." и СтрДлина(ДатаСтрокой)=10 Тогда //видимо это дата
		Попытка
			Возврат Дата(Сред(ДатаСтрокой,7,4), Сред(ДатаСтрокой,4,2), Лев(ДатаСтрокой, 2));
		Исключение
		КонецПопытки;
	КонецЕсли;		
	Если Сред(ДатаСтрокой,3,1)="." и Сред(ДатаСтрокой,6,1)="." и СтрДлина(ДатаСтрокой)=19 Тогда //видимо это дата
		Попытка
			Возврат Дата(Сред(ДатаСтрокой,7,4), Сред(ДатаСтрокой,4,2), Лев(ДатаСтрокой, 2), Сред(ДатаСтрокой,12, 2), Сред(ДатаСтрокой,15, 2), Сред(ДатаСтрокой,18, 2));
		Исключение
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция ПолучитьПредставлениеСертификата(Сертификат, Шаблон, СокрФИО = Ложь, ФорматДаты = "ДФ=dd.MM.yyyy", Разделитель = ".") Экспорт
	Перем ЗначениеПоляСертификата;
	
	МассивЧастейШаблона = СтрРазделить82(Шаблон, Разделитель);
	Результат = "";
	Если СокрФИО И get_prop(Сертификат, "ФИО") <> Неопределено Тогда
		Сертификат["ФИО"] = СокращенноеФИО(Сертификат["ФИО"]);
	КонецЕсли;
	
	Для Каждого ЧастьШаблона Из МассивЧастейШаблона Цикл
		ОткСкобка = Найти(ЧастьШаблона, "[");
		ЗакСкобка = Найти(ЧастьШаблона, "]");
		Пропустить = Ложь;
		Пока ОткСкобка < ЗакСкобка Цикл
			ИмяПоля = Сред(ЧастьШаблона, ОткСкобка + 1, ЗакСкобка - ОткСкобка - 1);
			ЗначениеПоляСертификата = get_prop(Сертификат, ИмяПоля);
			Если Не ЗначениеЗаполнено(ЗначениеПоляСертификата) Тогда
				Пропустить = Истина;
				Прервать;
			КонецЕсли;
			
			Если ТипЗнч(ЗначениеПоляСертификата) = Тип("Дата") Тогда
				ЗначениеПоляСертификата = Формат(ЗначениеПоляСертификата, ФорматДаты);
			КонецЕсли;
			
			ЧастьШаблона = СтрЗаменить(ЧастьШаблона, "[" + ИмяПоля + "]", ЗначениеПоляСертификата);
			ОткСкобка = Найти(ЧастьШаблона, "[");
			ЗакСкобка = Найти(ЧастьШаблона, "]");
		КонецЦикла;
		
		Если Пропустить Тогда
			Продолжить;
		КонецЕсли;
		
		Результат = Результат + ЧастьШаблона;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция СокращенноеФИО(ФИО) Экспорт
	// Формирует сокращенное ФИО из полного	
	_ФИО = СтрРазделить82(ФИО," ");
	
	Фамилия  = ?(_ФИО.Количество()>0,_ФИО[0],"");
	Имя      = ?(_ФИО.Количество()>=2,Лев(_ФИО[1],1)+".","");
	Отчество = ?(_ФИО.Количество()>=3,Лев(_ФИО[2],1)+".","");
	Возврат Фамилия+" "+Имя+Отчество;
КонецФункции

