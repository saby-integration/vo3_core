
&НаКлиенте
Процедура ЗагрузитьВСБИС( Команда, ПараметрКоманды ) Экспорт 

	context_params	= ПроверитьНаличиеПараметровПодключенияНаСервере();
	Если ТребуетсяАутентификация(context_params, Команда, ПараметрКоманды) Тогда
		Возврат;
	КонецЕсли;	
	
	мСсылок = ПолучитьСписокСсылокНаОбъектыКоманды( ПараметрКоманды );
	ДопПараметры = Новый Структура("ИмяИни,УдаленныеВОтдельныйМассив", ПараметрКоманды.ОписаниеКоманды.ПараметрыФормы.ИмяИни, Истина);
	ПроверкаОбмена = ПроисходилЛиОбменДокументов(мСсылок.Источник, ДопПараметры);
	
	//Переданные документы
	ДействияОбъекта = Неопределено;
	Если ПроверкаОбмена.БылОбмен.Количество() Тогда
		//Проверим возможность получения действий для первого элемента массива
		//Проверка для большого массива займёт уйму времени, поэтому только 0й элемент
		Попытка
			ДействияОбъекта = ПолучитьДействияДляОбъекта(ПроверкаОбмена.БылОбмен[0].Ссылка, context_params);
		Исключение                  
			ИнфоОбОшибке = ИнформацияОбОшибке();
			СтруктураОшибки = ExtExceptionAnalyse(ИнфоОбОшибке);
			НеобходимаНеобходимоВвестиКод = НеобходимоВвестиКодПодтверждения(СтруктураОшибки);
			Если СтруктураОшибки.type = "Unauthorized" или НеобходимаНеобходимоВвестиКод Тогда
				ВходяшиеПараметры	= Новый Структура("Команда, ПараметрКоманды",Команда,ПараметрКоманды);
				ПроверкаВведенныхДанныхАутентификации = Новый ОписаниеОповещения("_ПослеАутентификации", ЭтотМодуль(), ВходяшиеПараметры);
				ОткрытьФормуОбработки("Вход",,,,ПроверкаВведенныхДанныхАутентификации);
				Возврат;
			КонецЕсли;
		КонецПопытки;
	КонецЕсли;
	
	СообщениеПользователю = get_prop(ДействияОбъекта, "message2user");
	СтатусОперации = get_prop(ДействияОбъекта, "status");
	Если СообщениеПользователю <> Неопределено Тогда
		КартинкаОповещения = КартинкаУспешно();
		ЗаголовокОповещения = "Внимание";
		СообщениеПользователю = СообщениеПользователю +" "+Символы.ПС+ СокрЛП(ПроверкаОбмена.БылОбмен[0].Ссылка);
		Если СтатусОперации = "error" Тогда
			ЗаголовокОповещения = "Ошибка";
			КартинкаОповещения = БиблиотекаКартинок["Ошибка32"];
		КонецЕсли;
		ПоказатьОповещениеПользователя(
			ЗаголовокОповещения,,
			СообщениеПользователю
			,КартинкаОповещения
			,СтатусОповещенияПользователя.Важное
			, Новый УникальныйИдентификатор
		);
	КонецЕсли;
	
	КоличествоСОшибками = 0;
	КоличествоЗавершенных = 0;
	КоличествоЧерновиков = 0;
	КоличествоСПометкойУдаления = 0;
	Если get_prop(ПроверкаОбмена,"Удаленные", Неопределено) <> Неопределено Тогда
		Если ТипЗнч(ПроверкаОбмена.Удаленные) = Тип("Массив") Тогда
			КоличествоСПометкойУдаления = ПроверкаОбмена.Удаленные.Количество();	
		КонецЕсли;
	КонецЕсли;

	//Удалим объекты с пометкой на удаление среди отправленных
	НовыйСписокССылок = Новый Массив;
	Для Каждого ЗаписьОбъекта Из ПроверкаОбмена.БылОбмен Цикл
		КоличествоСОшибками = КоличествоСОшибками + ?(ЗаписьОбъекта.СостояниеИдСБИС = 9, 1, 0);
		КоличествоЗавершенных = КоличествоЗавершенных + ?(ЗаписьОбъекта.СостояниеИдСБИС = 7, 1, 0);
		КоличествоЧерновиков = КоличествоЧерновиков + ?(ЗаписьОбъекта.СостояниеИдСБИС = 0, 1, 0);
		НовыйСписокССылок.Добавить(ЗаписьОбъекта);
	КонецЦикла;
	ПроверкаОбмена.БылОбмен = НовыйСписокССылок;
	
	//Удалим объекты с пометкой на удаление в списке без обмена
	НовыйСписокССылок = Новый Массив;
	Для Каждого ЗаписьОбъекта Из ПроверкаОбмена.ОбменаНебыло Цикл
		НовыйСписокССылок.Добавить(ЗаписьОбъекта);
	КонецЦикла;
	ПроверкаОбмена.ОбменаНебыло = НовыйСписокССылок;

	ВопросКПользователю = "";
	
	ВопросыПользователю = Новый Массив;
	Шаг = 3;
	ТекстВопроса = "";
	Если КоличествоЗавершенных > 0 Тогда
		ВопросКПользователю = "Один или несколько документов уже отправлены, и в "+ЛокализацияНазваниеПродукта()+" по ним завершен документооборот. Загрузить их повторно?";
		ВопросыПользователю.Добавить( Новый Структура("ТекстВопроса,КодСтатуса", ВопросКПользователю, 7) );
	КонецЕсли;
	Если КоличествоЧерновиков > 0 Тогда
		ВопросКПользователю = "Один или несколько документов уже отправлены и являются черновиками в "+ЛокализацияНазваниеПродукта()+". Загрузить их повторно?";
		ВопросыПользователю.Добавить( Новый Структура("ТекстВопроса,КодСтатуса", ВопросКПользователю, 0) );
	КонецЕсли;
	Если КоличествоСОшибками > 0 Тогда
		ВопросКПользователю = "Один или несколько документов уже отправлены в "+ЛокализацияНазваниеПродукта()+", но обмен прошел с ошибкой "+ЛокализацияНазваниеПродукта()+". Загрузить их повторно?";
		ВопросыПользователю.Добавить( Новый Структура("ТекстВопроса,КодСтатуса", ВопросКПользователю, 9) );
	КонецЕсли;
	

	Если КоличествоСПометкойУдаления = 1 Тогда
		ПоказатьОповещениеПользователя(
			"Внимание",
			,
			"Объект помечен на удаление в 1С. Он исключен из отправки в "+ЛокализацияНазваниеПродукта(),
			БиблиотекаКартинок["Информация32"],
			СтатусОповещенияПользователя.Важное, 
			Новый УникальныйИдентификатор
		);
	КонецЕсли;
	Если КоличествоСПометкойУдаления > 1 Тогда
		ПоказатьОповещениеПользователя(
			"Внимание",
			,
			"Часть Объектов ("+Формат(КоличествоСПометкойУдаления, "ЧГ=0")+") помечены на удаление в 1С. Они были исключены из отправки в "+ЛокализацияНазваниеПродукта(),
			БиблиотекаКартинок["Информация32"],
			СтатусОповещенияПользователя.Важное, 
			Новый УникальныйИдентификатор
		);
	КонецЕсли;
	
	
	ДопПараметры		= Новый Структура();
	ДопПараметры.Вставить("ДействияОбъекта", ДействияОбъекта);
	ДопПараметры.Вставить("ПроверкаОбмена", ПроверкаОбмена);
	ДопПараметры.Вставить("ПараметрКоманды", ПараметрКоманды);
	ДопПараметры.Вставить("Команда", Команда);
	ДопПараметры.Вставить("ВопросыПользователю", ВопросыПользователю);
	
	Если ВопросыПользователю.Количество() = 0 Тогда
		ЗагрузитьВСБИСДействие( Команда, ДопПараметры );
	Иначе
		ВопросКПользователю = ВопросыПользователю[0].ТекстВопроса;
		
		ДействиеВопроса = Новый ОписаниеОповещения(
			"ЗагрузитьВСБИСОбработкаОтветаНаВопрос", 
			ЭтотМодуль(),
			ДопПараметры
		);
		ПоказатьВопрос(ДействиеВопроса, ВопросКПользователю,
			РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Да,"Загрузить повторно?");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВСБИСОбработкаОтветаНаВопрос(ОтветПользователя, ПараметрКоманды ) Экспорт 
	ВопросКПользователю = Неопределено;
	ВопросыПользователю = Неопределено;
	ПараметрКоманды.Свойство("ТекстВопроса", ВопросКПользователю);
	ПараметрКоманды.Свойство("ВопросыПользователю", ВопросыПользователю);
	
	КодСтатуса	= ВопросыПользователю[0].КодСтатуса;
	Если ОтветПользователя  = КодВозвратаДиалога.Нет Тогда
		ПроверкаОбмена	= Неопределено;
		ПараметрКоманды.Свойство("ПроверкаОбмена", ПроверкаОбмена);
		НовыйМассивДокументов = Новый Массив;
		Для Каждого ЗаписьДокумента Из ПроверкаОбмена.БылОбмен Цикл
			Если ЗаписьДокумента.СостояниеИдСБИС <> КодСтатуса Тогда
				НовыйМассивДокументов.Добавить(ЗаписьДокумента);
			КонецЕсли;
		КонецЦикла;
		ПроверкаОбмена.Вставить("БылОбмен", НовыйМассивДокументов);
		ПараметрКоманды.Вставить("ПроверкаОбмена", ПроверкаОбмена);
	КонецЕсли;
	ВопросыПользователю.Удалить(0);
	
	Если ВопросыПользователю.Количество() > 0 Тогда
		ВопросКПользователю = ВопросыПользователю[0].ТекстВопроса;
		ДействиеВопроса = Новый ОписаниеОповещения("ЗагрузитьВСБИСОбработкаОтветаНаВопрос", ЭтотМодуль(), ПараметрКоманды);
		ПоказатьВопрос(ДействиеВопроса, ВопросКПользователю,
			РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Да,"Загрузить повторно?");
		Возврат;
	КонецЕсли;
		
	ЗагрузитьВСБИСДействие( Неопределено, ПараметрКоманды );
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьВСБИСДействие( Команда, ВхПараметры ) Экспорт 
	
	ДействияОбъекта = Неопределено;
	ВхПараметры.Свойство("ДействияОбъекта", ДействияОбъекта);
	ПроверкаОбмена = Неопределено;
	ВхПараметры.Свойство("ПроверкаОбмена", ПроверкаОбмена);
	ПараметрКоманды = Неопределено;
	ВхПараметры.Свойство("ПараметрКоманды", ПараметрКоманды);
	
	ДопПараметры = Новый Структура("ПараметрКоманды", ПараметрКоманды);
	ОповешениеОЗакрытии = Новый ОписаниеОповещения("ПослеОтправитьВСБИС", ЭтотМодуль(), ДопПараметры);

	//Обработанные
	ОткрытьФормуДДЗ = Ложь;
	ПараметрыВФормуДДЗ = Новый Структура;
	Если ДействияОбъекта = Неопределено Или ТипЗнч(ДействияОбъекта)	<> Тип("Массив") Тогда
		//Действий для объекта нет, либо объект/документ удален на стороне сервера, и требуется переотправка
		Для Каждого ДанныеПоДокументу Из ПроверкаОбмена.БылОбмен Цикл
			//Перенесем объекты в список не обработаных
			ПроверкаОбмена.ОбменаНебыло.Добавить(ДанныеПоДокументу);
		КонецЦикла;
	Иначе
		СписокДокументовСБИС = Новый Массив();
		СписокДокументов1С = Новый Массив();
		Для Каждого СтрокаСпискаЗадач Из ПроверкаОбмена.БылОбмен Цикл 
			ДокументСБИС = Новый Структура("Идентификатор, ПервичныйКлюч, Документ1С", 
				СтрокаСпискаЗадач.UID,
				"",
				СтрокаСпискаЗадач.Ссылка);	
			СписокДокументовСБИС.Добавить(ДокументСБИС);

			СписокДокументов1С.Добавить(СтрокаСпискаЗадач.Ссылка);
		КонецЦикла;

		ПараметрыВФормуДДЗ = Новый Структура("СписокДокументовСБИС, СписокДокументов1С, МожноПереотправитьВСБИС, МожноОбновитьВСБИС", 
		СписокДокументовСБИС, СписокДокументов1С, СписокДокументов1С.Количество() > 0, Истина);
		ОткрытьФормуДДЗ = Истина;
	КонецЕсли;
		
	Если ПроверкаОбмена.БылОбмен.Количество() = 0 и ПроверкаОбмена.ОбменаНебыло.Количество() = 0 Тогда
		ПоказатьОповещениеПользователя(
				"Отправка отменена",
				, 
				"Среди выбранных для отправки документов нет поддерживаемых расширением",
				БиблиотекаКартинок["Ошибка32"],
				СтатусОповещенияПользователя.Важное, Новый УникальныйИдентификатор); 
	КонецЕсли;
			
	
	//Еще не обработанные
	Если ПроверкаОбмена.ОбменаНебыло.Количество() Тогда
		ПараметрыВФормуЗД = Новый Структура("Источник", ПроверкаОбмена.ОбменаНебыло);
		ОткрытьФормуОбработки("ЗагрузкаДокументов",ПараметрыВФормуЗД,ПараметрКоманды.Форма,Новый УникальныйИдентификатор(),ОповешениеОЗакрытии);
	КонецЕсли;  
	
	//Формы выполнить действие должна быть активной, поэтому открывается последней
	Если ОткрытьФормуДДЗ Тогда
		Попытка
			ОткрытьФормуОбработки("ВыполнитьДействие", ПараметрыВФормуДДЗ, ПараметрКоманды.Форма, Новый УникальныйИдентификатор(), ОповешениеОЗакрытии);
		Исключение
			ИнфоОбОшибке = ИнформацияОбОшибке();
			СтруктураОшибки = ExtExceptionAnalyse(ИнфоОбОшибке);
			ОписаниеОшибки = get_prop(СтруктураОшибки, "detail", Новый Структура);
			ПоказатьОповещениеПользователя(
				"Ошибка",,
				ОписаниеОшибки,
				БиблиотекаКартинок["Ошибка32"],
				СтатусОповещенияПользователя.Важное,
				Новый УникальныйИдентификатор
			);
		КонецПопытки;
	КонецЕсли;
	
	
	
	//Обновим табличную часть. т.к. могли быть удалены записи из регистра
	ДопПараметры = Новый Структура("ПараметрКоманды", ПараметрКоманды);
	ОбновитьТабличнуюЧастьФормы( Неопределено, ДопПараметры );
КонецПроцедуры


