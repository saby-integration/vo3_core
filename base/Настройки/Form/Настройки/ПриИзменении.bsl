
&НаКлиенте
Процедура send_invitationsПриИзменении(Элемент)
	УстановитьДоступностьПоляТипОтправкиПриглашения();	
КонецПроцедуры

&НаСервере
Функция ЗначениеФункциональнойОпции(ИмяФО)
	ЗначениеФО = Ложь;
	ПолноеИмяФО = ПолучитьИмяПродукта() + "_" + ИмяФО;
	Если Метаданные.ФункциональныеОпции.Найти(ПолноеИмяФО) <> Неопределено Тогда
        ЗначениеФО = ПолучитьФункциональнуюОпцию(ПолноеИмяФО);
	КонецЕсли;
	Возврат ЗначениеФО;
КонецФункции

&НаКлиенте
Процедура УстановитьДоступностьПоляТипОтправкиПриглашения()
	ЭлементыФормочки = ПолучитьЭлементыФормы();
	ЭлСпособОтправки = ЭлементыФормочки.Найти("грСпособОтправки");
	ВидимостьЭлементовКЭДО = ЗначениеФункциональнойОпции("ИспользоватьКЭДО");
	
	Если ЭлСпособОтправки = Неопределено Тогда
		ЭлСпособОтправки = ЭлементыФормочки.Найти("send_type");
	КонецЕсли;
	Если ЭлСпособОтправки <> Неопределено И send_invitations = Ложь Тогда
		ЭлСпособОтправки.Видимость = Ложь;
		send_type	 = "Email";
	Иначе
		ЭлСпособОтправки.Видимость = Истина И ВидимостьЭлементовКЭДО;
	КонецЕсли; 	
КонецПроцедуры

&НаСервере
Функция ПроверкаНаличияКомпонентыSabyHttpsClient()
	Ответ = ИСТИНА;
	Попытка
		МодульОбъекта = ПолучитьМодульОбъекта();  
		Компонента = МодульОбъекта.ПодключитьКомпонентуSabyHttpsClient(Неопределено);
	Исключение 
		Ответ = ЛОЖЬ; 
		ИнфОбОшибке = ИнформацияОбОшибке();
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = ИнфОбОшибке.Описание;
		СообщениеПользователю.Сообщить();
	КонецПопытки;
	Возврат Ответ;
КонецФункции

&НаКлиенте
Процедура ТранспортПриИзменении(Элемент)
	Если exchange_method = "SabyHttpsClient" Тогда
		ЕстьКомпонентаSabyHttpsClient = ПроверкаНаличияКомпонентыSabyHttpsClient();
		Если НЕ ЕстьКомпонентаSabyHttpsClient Тогда
			exchange_method = "API";
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

