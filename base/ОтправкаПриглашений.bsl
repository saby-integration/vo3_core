Функция ОтправитьПриглашение(СписокСотрудников) Экспорт
	context_params	= ПроверитьНаличиеПараметровПодключения();
	
	Если context_params.public.send_invitations = Ложь Тогда
		Возврат Новый Структура("data, status", "Отправка приглашений отключена в настройках", "error");
	ИначеЕсли Найти(context_params.public.send_invitations, "my" ) > 0 Тогда
		RedirectApplicationId = "b2b356e2-daa8-4fe7-b86e-0e2dd353f8c6";	
	ИначеЕсли Найти(context_params.public.send_invitations, "staff" ) > 0 Тогда
		RedirectApplicationId = "71627822-061a-42a9-9ad0-b90112a2d2a3";
	ИначеЕсли Найти(context_params.public.send_invitations, "lk" ) > 0 Тогда
		RedirectApplicationId = "7c1ff9a6-69ef-4908-ac7c-5dfcf52ae2a7";
	Иначе
		RedirectApplicationId = "d7b1d6a5-e59d-4b03-b823-726fbdc35d09";	
	КонецЕсли;	
	КоличествоСотрудниковВсего = СписокСотрудников.Количество();
	КоличествоСотрудников = 0;
	КоличествоПриглашений = 0;
	СписокИдСБИС = Новый Массив;
	ТекстОшибки = "";
	СтатусОтправки = "complete";
	Для каждого _Сотрудник из СписокСотрудников Цикл
		ДанныеСотрудника = ПолучитьДанныеПоСотруднику(context_params,_Сотрудник);			                                           
		ПоискВСБИС = local_helper_find_sbis_object(context_params, "ЧастноеЛицо", Новый Структура("Название, Ключ2, Ключ3", 
			Строка(_Сотрудник),  ДанныеСотрудника["ИНН"],  ДанныеСотрудника["СНИЛС"]));
		Если get_prop(ПоискВСБИС,"result", Новый Массив).Количество() > 0 Тогда
			КоличествоСотрудников = КоличествоСотрудников + 1;
			Для Каждого _знач из ПоискВСБИС["result"] Цикл
				InputData = Новый Структура ("FaceId, RedirectApplicationId, FirstName, LastName, TransportType, DoNotInviteIfUserLoggedOnce",
				Число(_знач["ИдСБИС"]),
				RedirectApplicationId,
				ДанныеСотрудника["Имя"],
				ДанныеСотрудника["Фамилия"],
				context_params.public.send_type,
				Ложь);
				Если ЗначениеЗаполнено(ДанныеСотрудника["Телефон"]) Тогда
					InputData.Вставить("Phone", ДанныеСотрудника["Телефон"]);	
				КонецЕсли;
				Если ЗначениеЗаполнено(ДанныеСотрудника["Почта"]) Тогда
					InputData.Вставить("Email", ДанныеСотрудника["Почта"]);
				КонецЕсли; 
				Попытка
					local_helper_invite_user_ext(context_params, InputData);
					КоличествоПриглашений = КоличествоПриглашений + 1;
				Исключение
					ИнфОбОшибке = ИнформацияОбОшибке();
					СтатусОтправки = "error";
					ТекстОшибки = ТекстОшибки + Строка(_Сотрудник) + ": " + NewExtExceptionСтруктура(ИнфОбОшибке,,,"Ошибка отправки приглашения").detail + Символы.ПС;
					//ВызватьИсключение(NewExtExceptionСтрока(ИнфОбОшибке,,,"Ошибка отправки приглашения"));	
				КонецПопытки	
			КонецЦикла;	
		Иначе
			ТекстОшибки = ТекстОшибки + Строка(_Сотрудник) + ": " + "не оформлен в "+ЛокализацияНазваниеПродукта() + Символы.ПС;	
		КонецЕсли;
			
	КонецЦикла;
	Если КоличествоСотрудников = 0 Тогда
		ТекстРезультат = "Ни одного сотрудника нет в "+ЛокализацияНазваниеПродукта();
	Иначе
		ТекстРезультат = "Приглашений отправлено: " + Строка(КоличествоПриглашений) + "/" + Строка(КоличествоСотрудников);
		Если ТекстОшибки <> "" Тогда
			ТекстРезультат = ТекстРезультат  + Символы.ПС + ТекстОшибки;
		КонецЕсли;	
	КонецЕсли;
	Возврат Новый Структура("data, status", ТекстРезультат, СтатусОтправки);
КонецФункции

Функция ПолучитьДанныеПоСотруднику(context_params,_Сотрудник)
	объект_сотр = Новый Структура("object", Новый Структура("ИдИС, ТипИС, ИмяИС", Строка(_Сотрудник.ФизическоеЛицо.УникальныйИдентификатор()), "Справочники", "Сотрудники"));
	ПараметрыВызова = Новый Структура("ini_name, object, endpoint, params, connection_uuid", "Blockly_ФизическиеЛица_read", объект_сотр, Неопределено, context_params, context_params["ConnectionId"]);
	Результат	= LocalCalcIni(ПараметрыВызова);
	ДанныеСотрудника = Новый Структура("Имя, Фамилия, СНИЛС, ИНН, ДокументВидИд, ДокументСерия, ДокументНомер, Телефон, Почта", 
		Результат.data["Имя"], Результат.data["Фамилия"], Результат.data["СНИЛС"], Результат.data["ИНН"], get_prop(Результат.data["ДокументВид"],"ИдИС"), Результат.data["ДокументСерия"], Результат.data["ДокументНомер"],,);
	Для каждого _Контакт из Результат.data["КонтактнаяИнформация"] Цикл  
		объект_ки = Новый Структура("object", Новый Структура("ИдИС, ТипИС, ИмяИС", _Контакт["Вид"]["ИдИС"], "Справочники", "ВидыКонтактнойИнформации")); 
		ПараметрыВызова = Новый Структура("ini_name, object, endpoint, params, connection_uuid", "Blockly_ВидыКонтактнойИнформации_read", _Контакт["Вид"], Неопределено, context_params, context_params["ConnectionId"]);
		РезультатКИ	= LocalCalcIni(ПараметрыВызова);
		Если РезультатКИ.data["Название"] = "Email" Тогда
			ДанныеСотрудника.Вставить("Почта", _Контакт["Значение"]);
		ИначеЕсли Найти(НРег(РезультатКИ.data["Название"]),"мобильный телефон") > 0 Тогда
			ДанныеСотрудника.Вставить("Телефон", _Контакт["Значение"]);
		ИначеЕсли Найти(НРег(РезультатКИ.data["Название"]),"телефон") > 0 и get_prop(ДанныеСотрудника, "Телефон") = Неопределено Тогда
			ДанныеСотрудника.Вставить("Телефон", _Контакт["Значение"])
		КонецЕсли;	
	КонецЦикла;	
	Возврат ДанныеСотрудника;
КонецФункции	

