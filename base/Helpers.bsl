Функция ПолучитьСсылкуПоИдИС(знач ИмяИС, ИдИС) Экспорт
	Попытка
		мИмяИС = СтрРазделить82(ИмяИС,".");
		Если мИмяИС[0] = "Документы" Тогда
			УИД = Новый УникальныйИдентификатор(ИдИС);
			МенеджерОбъекта = Документы[мИмяИС[1]];
			Ссылка = МенеджерОбъекта.ПолучитьСсылку(УИД);
		ИначеЕсли мИмяИС[0] = "Справочники" Тогда
			УИД = Новый УникальныйИдентификатор(ИдИС);
			МенеджерОбъекта = Справочники[мИмяИС[1]];
			Ссылка = МенеджерОбъекта.ПолучитьСсылку(УИД);
		ИначеЕсли мИмяИС[0] = "Перечисления" Тогда
			МенеджерОбъекта = Перечисления[мИмяИС[1]];
			Ссылка = МенеджерОбъекта[ИдИС];
		ИначеЕсли мИмяИС[0] = "ПланыВидовРасчета" Тогда
			УИД = Новый УникальныйИдентификатор(ИдИС);
			МенеджерОбъекта = ПланыВидовРасчета[мИмяИС[1]];
			Ссылка = МенеджерОбъекта.ПолучитьСсылку(УИД);
		ИначеЕсли мИмяИС[0] = "ПланыВидовХарактеристик" Тогда
			УИД = Новый УникальныйИдентификатор(ИдИС);
			МенеджерОбъекта = ПланыВидовХарактеристик[мИмяИС[1]];
			Ссылка = МенеджерОбъекта.ПолучитьСсылку(УИД);
		КонецЕсли;
		Если Найти(Строка(Ссылка), "<Объект не найден>") > 0 Тогда
			ВызватьИсключение NewExtExceptionСтрока(,"Объект не найден",ИмяИС+" "+ИдИС,"ПолучитьСсылкуПоИдИС",,"NotFound");
		КонецЕсли;
		Возврат Ссылка;
	Исключение
		ИнфОбОшибке = ИнформацияОбОшибке();
		ВызватьИсключение NewExtExceptionСтрока(ИнфОбОшибке,,,"ПолучитьСсылкуПоИдИС");
	КонецПопытки;
КонецФункции

Функция СтрокаТаблицыЗначенийВСтруктуру(СтрокаТаблицыЗначений) Экспорт
	
	Структура = Новый Структура;
	Для каждого Колонка Из СтрокаТаблицыЗначений.Владелец().Колонки Цикл
		Структура.Вставить(Колонка.Имя, СтрокаТаблицыЗначений[Колонка.Имя]);
	КонецЦикла;
	
	Возврат Структура;
	
КонецФункции

Функция МассивВТаблицуЗначений(Массив) Экспорт
	
	Результат = Новый ТаблицаЗначений;
	
	Если Массив.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	Элемент = Массив[0];
	ТипЭлемента = ТипЗнч(Элемент);
	
	Если ТипЭлемента = Тип("Структура") Или ТипЭлемента = Тип("ФиксированнаяСтруктура") Тогда
		Для Каждого ЭлементСтруктуры Из Элемент Цикл
			Если ТипЗнч(ЭлементСтруктуры.Значение) = Тип("Неопределено") Тогда
				Продолжить;
			КонецЕсли;
			МассивТипов = Новый Массив;
			МассивТипов.Добавить(ТипЗнч(ЭлементСтруктуры.Значение));
			//ОписаниеТипов = Новый ОписаниеТипов("Число");
			Результат.Колонки.Добавить(ЭлементСтруктуры.Ключ, Новый ОписаниеТипов(МассивТипов));
		КонецЦикла;
		Для Каждого Элемент Из Массив Цикл
			Если ТипЗнч(Элемент) = Тип("Неопределено") Тогда
				Продолжить;
			КонецЕсли;	
			ЗаполнитьЗначенияСвойств(Результат.Добавить(), Элемент);
		КонецЦикла;  
	ИначеЕсли ТипЭлемента = Тип("Соответствие") Тогда
		Для Каждого Запись ИЗ Массив Цикл
			НоваяСтрока = Результат.Добавить(); 
			Для Каждого РеквизитЗаписи ИЗ Запись Цикл
				НазваниеКолонки = РеквизитЗаписи.Ключ;
				НазваниеКолонки = СтрЗаменить(НазваниеКолонки,"@","_");
				Если Результат.Колонки.Найти(НазваниеКолонки) = Неопределено Тогда 
					Результат.Колонки.Добавить(НазваниеКолонки);	
				КонецЕсли;
				НоваяСтрока[НазваниеКолонки] = РеквизитЗаписи.Значение;	
			КонецЦикла;	
		КонецЦикла;
	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ТаблицаЗначенийВМассив(Таблица)
	
	Результат = Новый Массив;
	
	Если ТипЗнч(Таблица) = Тип("ТаблицаЗначений") Тогда
		СтруктураКолонок = Новый Структура;
		Для каждого ТекущаяКолонка Из Таблица.Колонки Цикл
			СтруктураКолонок.Вставить(ТекущаяКолонка.Имя);
		КонецЦикла;
		Для каждого ТекущаяСтрока Из Таблица Цикл
			СтруктураТекущейСтроки = Новый Структура;
			Для каждого ТекущийКлюч Из СтруктураКолонок Цикл
				СтруктураТекущейСтроки.Вставить(ТекущийКлюч.Ключ);
			КонецЦикла;
			ЗаполнитьЗначенияСвойств(СтруктураТекущейСтроки, ТекущаяСтрока);
			Результат.Добавить(СтруктураТекущейСтроки);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

