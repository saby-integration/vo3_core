
&НаКлиенте
Процедура Подписать(ОбработчикРезультата, Сертификат, Вложения) Экспорт
	
	Контекст = Новый Структура;
	Контекст.Вставить("Сертификат", Сертификат);
	Контекст.Вставить("Вложения", Вложения);
	Контекст.Вставить("ОбработчикРезультата", ОбработчикРезультата);
	
	ОбработчикРезультата = Новый ОписаниеОповещения(
		"ПодписатьПослеПоискаМенеджеровКриптографии", МодульФоновогоЗаданияКлиент(), Контекст);
	НайтиМенеджерКриптографии(ОбработчикРезультата, Сертификат.Алгоритм);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьПослеПоискаМенеджеровКриптографии(МенеджерКриптографии, Контекст) Экспорт
	
	Если МенеджерКриптографии = Неопределено Тогда
		ВыполнитьОбработкуОповещения(Контекст.ОбработчикРезультата, Неопределено); // Ошибка
		Возврат;
	КонецЕсли;
	
	Контекст.Вставить("МенеджерКриптографии", МенеджерКриптографии);
	
	ОбработчикРезультата = Новый ОписаниеОповещения(
		"ПодписатьПослеПолученияХранилищаСертификатов", МодульФоновогоЗаданияКлиент(), Контекст);
	ПолучитьХранилищеСертификатов(ОбработчикРезультата, МенеджерКриптографии);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьПослеПолученияХранилищаСертификатов(ХранилищеСертификатовКриптографии, Контекст) Экспорт
	
	Если ХранилищеСертификатовКриптографии = Неопределено Тогда
		ВыполнитьОбработкуОповещения(Контекст.ОбработчикРезультата, Неопределено); // Ошибка
		Возврат;
	КонецЕсли;
	
	Контекст.Вставить("ХранилищеСертификатовКриптографии", ХранилищеСертификатовКриптографии);
	
	ОбработчикРезультата = Новый ОписаниеОповещения(
		"ПодписатьПослеПоискаСертификатаПоОтпечатку", МодульФоновогоЗаданияКлиент(), Контекст);
	НайтиСертификатПоОтпечатку(ОбработчикРезультата, ХранилищеСертификатовКриптографии,
		Контекст.Сертификат.Отпечаток);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьПослеПоискаСертификатаПоОтпечатку(НайденныйСертификат, Контекст) Экспорт
	
	Если НайденныйСертификат = Неопределено Тогда
		ВыполнитьОбработкуОповещения(Контекст.ОбработчикРезультата, Неопределено); // Ошибка
		Возврат;
	КонецЕсли;
	
	Результат = Новый Соответствие();
	
	Контекст.Вставить("Результат", Результат);
	Контекст.Вставить("ТекИндекс", -1);
	Контекст.Вставить("Количество", Контекст.Вложения.Количество());
	Контекст.Вставить("НайденныйСертификат", НайденныйСертификат);
	
	ПодписатьЦиклНачало(Контекст);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьЦиклНачало(Контекст)
	
	Контекст.ТекИндекс = Контекст.ТекИндекс + 1;
	Если Контекст.ТекИндекс < Контекст.Количество Тогда
		ПодписатьНачатьПодписаниеСертификатом(Контекст);
	Иначе
		ПодписатьЗавершение(Контекст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьНачатьПодписаниеСертификатом(Контекст) Экспорт
	
	Вложение = Контекст.Вложения[Контекст.ТекИндекс];
	
	ОбработчикРезультата = Новый ОписаниеОповещения(
		"ПодписатьПослеПодписанияСертификатом", МодульФоновогоЗаданияКлиент(), Контекст);
	ПодписатьСертификатом(ОбработчикРезультата,
		Контекст.МенеджерКриптографии,
		Base64Значение(Вложение["Файл"]["ДвоичныеДанные"]),
		Контекст.НайденныйСертификат);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьПослеПодписанияСертификатом(ПодписанныеДанные, Контекст) Экспорт
	
	// Обработка ошибки
	Если ТипЗнч(ПодписанныеДанные) = Тип("Структура")
		И ПодписанныеДанные.Свойство("БылаОшибка") = Истина
		И ПодписанныеДанные.БылаОшибка = Истина Тогда
		
		ВыполнитьОбработкуОповещения(Контекст.ОбработчикРезультата, ПодписанныеДанные); // Ошибка
		Возврат;
	КонецЕсли;
	
	Вложение = Контекст.Вложения[Контекст.ТекИндекс];
	Контекст.Результат.Вставить(Вложение["Идентификатор"],
		СтрЗаменить(СтрЗаменить(Base64Строка(ПодписанныеДанные), Символы.ПС, ""), Символы.ВК, ""));
	
	ПодписатьЦиклНачало(Контекст);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьЗавершение(Контекст)
	
	ВыполнитьОбработкуОповещения(Контекст.ОбработчикРезультата, Контекст.Результат);
	
КонецПроцедуры

