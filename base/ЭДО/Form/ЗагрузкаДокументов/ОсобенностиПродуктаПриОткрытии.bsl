
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	context_param = ПроверитьНаличиеПараметровПодключенияНаСервере();
	Транспорт = ПолучитьФормуТранспорта(context_param);
	BlocklyExecutor = ПолучитьФормуBlockly();

	ФормаОткрыта = Истина;
	
	ОбъектыОтправки = Новый Массив;
	Для Каждого СтрокаТбл Из Объекты Цикл
		ОбъектыОтправки.Добавить(СтрокаТбл.Объект);
	КонецЦикла;
	ПараметрыПереотправки = Новый Структура();
	ПараметрыПереотправки.Вставить("ОбъектыОтправки", ОбъектыОтправки);
	ПараметрыПереотправки.Вставить("ВладелецФормы", ЭтаФорма.ВладелецФормы);
	ПроверкаВведенныхДанныхАутентификации = Неопределено;
		
	СтатусВерсии = ПолучитьИнформациюОВерсииПоУмолчанию();
	СтатусВерсии = ПолучитьСтатусВерсииНаФорме(Ложь, СтатусВерсии);
	ДанныеОшибки = get_prop(СтатусВерсии, "ДанныеОшибки");
	ОписаниеОшибки = get_prop(ДанныеОшибки, "detail");
	ТребуетсяОткрытьФормуАвторизации =  (get_prop(ДанныеОшибки, "type") = "Unauthorized");
	Если ТребуетсяОткрытьФормуАвторизации Тогда
#Область include_core_base_Авторизация_Form_Вход_ОписаниеОповещенияОбработкиРезультатаАвторизации
#КонецОбласти
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОбновитьИнформациюОВерсии(СтатусВерсии);
	
	//Saby_ТранспортПриИзменении( Элементы.ТаблицаПолучателейSMS );
	//ИзменениеВидаЭлементов();
	
	//ВЫзов с клиента, тк всё храниться в переменных формы
	ВложенияТекущегоТипаОбъекта1С.Очистить();
	ВложенияПоТипамОбъектов1С.Очистить();
	РегламентПоТипамДокументов.Очистить();
	КомандыПечатиФормы = Новый Массив;
	ЗаполнитьСписокПФПоТблДокументов();
	Попытка
		ЗаполнитьТЗДоступныхРегламентов();
	Исключение
		Отказ	= Истина;
		ИнфоОбОшибке = ИнформацияОбОшибке();
		СтруктураОшибки = ExtExceptionAnalyse(ИнфоОбОшибке);
		ОписаниеОшибки = get_prop(СтруктураОшибки, "detail", Новый Структура);
		ТребуетсяОткрытьФормуАвторизации = НеобходимоВвестиКодПодтверждения(ОписаниеОшибки);
		Если Не ТребуетсяОткрытьФормуАвторизации Тогда
			ПоказатьОповещениеПользователя(
				"Ошибка",,
				ОписаниеОшибки,
				БиблиотекаКартинок["Ошибка32"],
				СтатусОповещенияПользователя.Важное,
				Новый УникальныйИдентификатор
			);
		Иначе
#Область include_core_base_Авторизация_Form_Вход_ОписаниеОповещенияОбработкиРезультатаАвторизации
#КонецОбласти
		КонецЕсли;
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	//Будем проверять единыжды, при открытии по первому объекту
	ФормаОткрыта = Истина;
	СкрытьПФЕслиНеДокумент();
	//ЗаполнитьКоментарииДокументовКОтправке();
КонецПроцедуры

&НаКлиенте
Функция ОбработатьРезультатСобытия(Параметры)
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Функция ВызовПолученияСпискаРегламентов(ИмяТипаДокумента)
	Возврат ПолучитьСписокРегламентов(ИмяТипаДокумента); 
КонецФункции

