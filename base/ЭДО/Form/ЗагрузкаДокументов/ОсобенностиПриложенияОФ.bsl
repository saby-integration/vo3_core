
Функция ТаблицаМетаданныхПоТаблицеДокументов()
	Если ТипЗнч(Объекты) = Тип("ДанныеФормыКоллекция") Тогда
		ВремТаблМД = Объекты.Выгрузить(, "Объект");
	ИначеЕсли ТипЗнч(Объекты) = Тип("ТаблицаЗначений") Тогда
		ВремТаблМД = Объекты.Скопировать(, "Объект");
	Иначе
		ВремТаблМД = Объекты;
	КонецЕсли;
	ВремТаблМД.Колонки.Добавить("ОбъектМД");
	ВремТаблМД.Колонки.Добавить("Обработано", Новый ОписаниеТипов("Булево"));
	Для Каждого СтрДокум Из ВремТаблМД Цикл
		СтрДокум.ОбъектМД = СтрДокум.Объект.Метаданные();
	КонецЦикла;
	Возврат ВремТаблМД;
КонецФункции

&НаКлиенте
Процедура УстановитьПризнакПолученыхПФПоТекущемуВидуОбъекта(тблОбъекты, ТипМетаданных)
	мСтрокиТаблицы = тблОбъекты.НайтиСтроки(Новый Структура("ОбъектМД", ТипМетаданных));
	Для Каждого СтрокаТблМД Из мСтрокиТаблицы Цикл
		СтрокаТблМД.Обработано = Истина;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ЗаполнитьСписокПФПоТблДокументов()
	МодульУниверсальныеМеханизмы = ОбщийМодульКонфигурации("УниверсальныеМеханизмы");
	Если МодульУниверсальныеМеханизмы = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВремТаблМД = ТаблицаМетаданныхПоТаблицеДокументов();
	Для Каждого СтрДокум Из ВремТаблМД Цикл
		Если СтрДокум.Обработано Тогда
			// Данный тип метаданных уже обработан
			Продолжить;
		КонецЕсли;
		УстановитьПризнакПолученыхПФПоТекущемуВидуОбъекта(ВремТаблМД, СтрДокум.ОбъектМД);
		
		Попытка
			ОбъектВыгрузки	= СтрДокум.Объект.ПолучитьОбъект();
			мДеревоМакетов = МодульУниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(СтрДокум.Объект, ОбъектВыгрузки.ПолучитьСтруктуруПечатныхФорм());
		Исключение
			//У объекта в менеджере объекта отсутствует процедура - ПолучитьСтруктуруПечатныхФорм
			Продолжить;
		КонецПопытки;

		ДобавленныеПФ = Новый Соответствие();
		//Общие ПФ формы
		ИспКомандыПФ = мДеревоМакетов.Строки.НайтиСтроки(Новый Структура("ТипКнопки", ТипКнопкиКоманднойПанели.Действие));
		Для Каждого КомандаПечати Из ИспКомандыПФ Цикл
			Если КомандаПечати.Имя = "ПечатьПоУмолчанию" Тогда
				// Пропустим команду выбора ПФ по умолчанию
				Продолжить;
			КонецЕсли;

			ДобавленныеПФ.Вставить(КомандаПечати.Имя, Истина);

			КомандаП = Новый Структура("Действие, Имя, Подсказка, Расшифровка, Текст");

			ЗаполнитьЗначенияСвойств(КомандаП, КомандаПечати);
			
			НоваяПФ = ВложенияПоТипамОбъектов1С.Добавить();
			НоваяПФ.Представление = КомандаПечати.Текст;
			НоваяПФ.ТипВложения = "ПечатнаяФорма";
			НоваяПФ.ИндексКартинки = 0;
			НоваяПФ.ВидОбъекта = СтрДокум.ОбъектМД.Имя;
			НоваяПФ.Команда = КомандаП;
		КонецЦикла;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции 

&НаСервере
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	ВложенияПоТипамОбъектов1С.Колонки.Добавить("Представление");
	ВложенияПоТипамОбъектов1С.Колонки.Добавить("ОтметкаВыбора", Новый ОписаниеТипов("Булево"));
	ВложенияПоТипамОбъектов1С.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	ВложенияПоТипамОбъектов1С.Колонки.Добавить("Команда");
	// На форме обычного приложения "Команда" имеет тип - Строка и назначить ей тип - Струкртура невозможно
	// поэтому для удаления вложений доболнительно будет колонка с полныи именем файла
	ВложенияПоТипамОбъектов1С.Колонки.Добавить("ПолноеИмяФайла");
	ВложенияПоТипамОбъектов1С.Колонки.Добавить("ТипВложения");
	ВложенияПоТипамОбъектов1С.Колонки.Добавить("ВидОбъекта");
	ВложенияПоТипамОбъектов1С.Колонки.Добавить("СсылкаНаПрисоединенныйФайл");

	РегламентПоТипамДокументов.Колонки.Добавить("Регламент");
	РегламентПоТипамДокументов.Колонки.Добавить("ВидОбъекта");
	РегламентПоТипамДокументов.Колонки.Добавить("ПредставлениеОбъекта");

	РегламентТекущегоТипаДокумента.Колонки.Добавить("Регламент");
	РегламентТекущегоТипаДокумента.Колонки.Добавить("ВидОбъекта");
	РегламентТекущегоТипаДокумента.Колонки.Добавить("ПроизвольноеНазваниеРегламента");
	РегламентТекущегоТипаДокумента.Колонки.Добавить("ПредставлениеОбъекта");

	ЭлементыФормочки = ПолучитьЭлементыФормыНаСервере();

	ЭлементыФормочки.КаналИнформации.СписокВыбора.Добавить(0, "Электронная почта");
	ЭлементыФормочки.КаналИнформации.СписокВыбора.Добавить(1, "СМС");
	//ЭлементыФормочки.КаналИнформации.СписокВыбора.Добавить(2, "Viber");
	//ЭлементыФормочки.КаналИнформации.СписокВыбора.Добавить(3, "WhatsApp");
	//ЭлементыФормочки.КаналИнформации.СписокВыбора.Добавить(4, "Telegram");

	ЭлементыФормочки.МаршрутОзнакомления.СписокВыбора.Добавить(0, "Одновременно всем");
	ЭлементыФормочки.МаршрутОзнакомления.СписокВыбора.Добавить(1, "Сначала руководители");
	ЭлементыФормочки.МаршрутОзнакомления.СписокВыбора.Добавить(2, "Сначала сотрудники");

	ПростойЗапросПодписи = Ложь;
	Если ЭлементыФормочки.Найти("НадписьКаналИнформации") <> Неопределено Тогда
		ЭлементыФормочки.НадписьКаналИнформации.Видимость = ПростойЗапросПодписи;
	КонецЕсли;
	Если ЭлементыФормочки.Найти("НадписьМаршрутОзнакомления") <> Неопределено Тогда
		ЭлементыФормочки.НадписьМаршрутОзнакомления.Видимость = ПростойЗапросПодписи;
	КонецЕсли;

	ПриСозданииНаСервере(Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВложение(Команда)
	СтандартнаяОбработка = Ложь;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = НСтр("ru=’Любой файл (*.*)|*.*'");
	Диалог.Заголовок = НСтр("ru=’Выберите файл'");
	Диалог.МножественныйВыбор = Истина;
	ОбработкаОкончанияЗагрузки = Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтаФорма, Диалог);
	НачатьПомещениеФайлов(ОбработкаОкончанияЗагрузки,, Диалог, Истина);
КонецПроцедуры

&НаСервере
Процедура УдалитьСтрокуВыбранногоОбъекта(ИдентификаторыСтрок)
	Для Каждого ИдентификаторСтроки Из ИдентификаторыСтрок Цикл
		Объекты.Удалить(ИдентификаторСтроки);
	КонецЦикла;
КонецПроцедуры

Процедура ВложенияТипаДокументаПередУдалением(Элемент, Отказ)
	ЭлементыФормочки = ПолучитьЭлементыФормы();
	ДанныеСтроки = ЭлементыФормочки.ВложенияТипаДокумента.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено ИЛИ ДанныеСтроки.ТипВложения = "ПечатнаяФорма" Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	//Удаление из общей таблицы
	УдалитьВложениеИзТаблицы("ВложенияПоТипамОбъектов1С", ДанныеСтроки);
	//Удаление из таблицы на форме
	УдалитьВложениеИзТаблицы("ВложенияТекущегоТипаОбъекта1С", ДанныеСтроки);
КонецПроцедуры

#Область include_core_base_ОбщийМодульКонфигурации
#КонецОбласти

&НаКлиенте
Процедура УдалитьВложениеИзТаблицы(ИмяТаблицы, ДанныеУдаления)
	ОтборСтрок = Новый Структура("ТипВложения, Представление, ПолноеИмяФайла",
		"ФайлСДиска",
		ДанныеУдаления.Представление,
		ДанныеУдаления.ПолноеИмяФайла);
	мСтрокКУдалению = ЭтаФорма[ИмяТаблицы].НайтиСтроки(ОтборСтрок);
	Если мСтрокКУдалению.Количество() > 0 Тогда
		//удаляем обратным перебором, т.к. индекс строк меняется
		ВсегоСтрок = мСтрокКУдалению.Количество() - 1;
		Для СчетСтрок = 0 По ВсегоСтрок Цикл
			СтрокаКУдалению = мСтрокКУдалению[ВсегоСтрок - СчетСтрок];
			ЭтаФорма[ИмяТаблицы].Удалить(СтрокаКУдалению);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры	
