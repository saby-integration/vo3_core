
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МодульОбъекта = ПолучитьМодульОбъекта();
	
	СписокДокументовСБИС = Неопределено;
	СписокДействий       = Неопределено;
	ПараметрыВызова      = Неопределено;
	ТипТекущегоОбъекта1С = Неопределено;
	
	ЭлементыФормочки = ПолучитьЭлементыФормыНаСервере();
	
	ЭлементыФормочки.ОтправитьВложения.Видимость = Истина;
	Если Параметры.Свойство("СписокДокументовСБИС", СписокДокументовСБИС) 
		И СписокДокументовСБИС.Количество() > 0 Тогда
		
		ПараметрыВызова = Новый Структура("Документы, Действие, _print_forms", СписокДокументовСБИС,,Новый Массив()); 
		Попытка
			СписокДействий = ПолучитьСписокДействийСБИС(СписокДокументовСБИС[0]);	
		Исключение
			Отказ  = Истина;	
			ИнфОбОшибке = ИнформацияОбОшибке();
			ВызватьИсключение(NewExtExceptionСтрока(ИнфОбОшибке));		
		КонецПопытки;
	//Иначе
		// todo добавить закрытие формы с сообщение пользователю
	КонецЕсли;

	УстановитьЛокализацию(ЭлементыФормочки);
	
	Если СписокДействий <> Неопределено Тогда
		ДобавитьДействияНаФорму(СписокДействий);
		СписокДействийКоличество = СписокДействий.Количество();
	КонецЕсли;
	
	ВложенияТекущегоТипаОбъекта1С.Очистить();
	ВложенияПоТипамОбъектов1С.Очистить();
	
	Документы1С = get_prop(ПараметрыВызова,"Документы");
	Если Документы1С = Неопределено Или Документы1С.Количество() = 0 Тогда
		//  Во входящих параметрах отсутствуют документы
		Отказ	= Истина;
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	Документ1С = get_prop(ПараметрыВызова["Документы"][0],"Документ1С");
	
	Если ТипЗнч(Документ1С) =  Тип("Массив") Тогда
		Если Документ1С.Количество() > 0 Тогда
			Документ1С = Документ1С[0];
		Иначе
			Документ1С = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Если Документ1С <> Неопределено Тогда
		МетаданныеОбъекта    = Документ1С.Метаданные();
		ТипТекущегоОбъекта1С = МетаданныеОбъекта.Имя;
		ПолучитьСписокПечатныхФормОбъекта1С(МетаданныеОбъекта, ВложенияПоТипамОбъектов1С);
	КонецЕсли;
	
	Если context_params = Неопределено Тогда
		context_params	= МодульОбъекта.ПроверитьНаличиеПараметровПодключения();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// нет доступных действий
	Если Не ЗначениеЗаполнено(СписокДействийКоличество)
		И Не ПолучитьЭлементыФормы().ГруппаПереотправка.Видимость Тогда
		
		КартинкаСообщения = БиблиотекаКартинок["Ошибка32"];
				
		ПоказатьОповещениеПользователя(
			"Нет доступных действий",
			,
			"",
			КартинкаСообщения,
			СтатусОповещенияПользователя.Важное,
			Новый УникальныйИдентификатор);
			
		Отказ = Истина;
		Закрыть();
		Возврат;
			
	КонецЕсли;	
		
	ЗаполнитьВложенияТекущегоТипаОбъекта(ТипТекущегоОбъекта1С);
	
	//Вызов с клиента, тк всё храниться в переменных формы
	ПрочитатьВыборПФДляВидаДокумента(ТипТекущегоОбъекта1С, "Действие");
	//ЗаполнитьКоментарииДокументовКОтправке();
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВложения(Команда)
    Попытка
        ОтправитьВложенияНаСервере(context_params);
        ПоказатьОповещениеПользователя(
            "Вложения успешно обновлены.",
            ,
            "",
            КартинкаУспешно(),
            СтатусОповещенияПользователя.Важное,
            Новый УникальныйИдентификатор);
    Исключение
        ИнфОбОшибке = ИнформацияОбОшибке();
        СтруктураОшибки    = ExtExceptionAnalyse(ИнфОбОшибке);
        
        ПоказатьОповещениеПользователя(
            "Ошибка при передаче вложений.",
            ,
            СтруктураОшибки.message,
            КартинкаОшибка(),
            СтатусОповещенияПользователя.Важное,
            Новый УникальныйИдентификатор);
    КонецПопытки;
    ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Функция Сконвертироватьto_pdfa(context_params, ДвоичныеДанные, Имя, ИмяЗапроса)
	МодульОбработки = ПолучитьМодульОбъекта();
	Возврат МодульОбработки.local_helper_convert_to_pdfa_to_disk_x(context_params,ДвоичныеДанные, Имя);
КонецФункции

&НаСервере
Функция ЗаписатьВложенияНаСайт(context_params, ДокИВложения, ИмяЗапроса)
	МодульОбработки = ПолучитьМодульОбъекта();
	Возврат МодульОбработки.local_helper_write_attachment(context_params, ДокИВложения);	
КонецФункции

&НаКлиенте
Процедура КомандаВыполнитьДействиеПослеОбновленияКэшаЛокальныхСертификатов(РезультатОбновленияКеша, Контекст) Экспорт
	
	Результат = ВыполнитьДействиеНаСервере("Документы_execute", Контекст.context_params, Контекст.ПараметрыДействия);
	
	ОбработчикРезультата = Новый ОписаниеОповещения("КомандаВыполнитьДействиеЗавершение", ЭтаФорма, Контекст);
	ПоказатьРезультатВыполнения(ОбработчикРезультата, Результат, Контекст.context_params, Контекст.ПараметрыДействия);
	
КонецПроцедуры
