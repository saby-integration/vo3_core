
Процедура ВыполнитьРегламентнуюЗадачуРасширения(ИдентификаторКоманды) Экспорт
	
	ИмяОбработки = ПолучитьИмяПродукта();
		
	Если Врег(ИдентификаторКоманды) = Врег(ИмяОбработки+"_АвтоматическоеОбновлениеСтатусов") Тогда
		
		context_params	= ПроверитьНаличиеПараметровПодключения();
		МодульФоновогоЗаданияСервер().АвтоматическоеОбновлениеСтатусов(context_params);
		
	// ЭПД	
	ИначеЕсли СтрНайти(ИдентификаторКоманды, "ЭПД", НаправлениеПоиска.СКонца) > 0 Тогда
						
		ИмяМодуля = "Saby_ТНОбщегоНазначенияСервер";						
		Если Метаданные.ОбщиеМодули.Найти(ИмяМодуля) <> Неопределено Тогда
			
			МодульКонфигурации = ОбщегоНазначения.ОбщийМодуль(ИмяМодуля);		
			МодульКонфигурации.ВыполнитьРегламентноеЗаданиеЭПД(ИдентификаторКоманды);
			
		КонецЕсли;		
	ИначеЕсли Врег(ИдентификаторКоманды) = Врег(ИмяОбработки+"_ЗапускАвтоматическихОпераций") Тогда
		ЭтоВнешняяОбработка = ЛОЖЬ;
		Если Метаданные.Обработки.Найти(ИмяОбработки) <> Неопределено Тогда 
			МодульОбработки = Обработки[ИмяОбработки].Создать();  
			МодульОбработки.ЗапуститьАвтоматическиеОперацииФоновыеЗадания(ИмяОбработки, ЭтоВнешняяОбработка);
		Иначе
			ВызватьИсключение "Отсутствует обработка "+ИмяОбработки;
		КонецЕсли;			
	Иначе		
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#Область include_core_base_РегламентныеЗаданияСведения
#КонецОбласти

#Область include_core_base_РегламентныеЗаданияПараметры
#КонецОбласти

Процедура ИнициализацияРегламентныхЗаданий()
	
	УстановитьПривилегированныйРежим(Истина); //Необходимо пользователям с отсутствием полных прав
	МассивРегламентныхЗаданий = МассивРегламентныхЗаданий();
	Для Каждого Задание Из МассивРегламентныхЗаданий Цикл
		Отбор = Новый Структура("Ключ", Задание.Ключ);
		НайденныеРегЗадания = РегламентныеЗаданияСервер.НайтиЗадания(Отбор);
		Если НайденныеРегЗадания.Количество() = 0 Тогда
			ПараметрыЗадания = ПараметрыРегЗадания(Задание);
			РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

