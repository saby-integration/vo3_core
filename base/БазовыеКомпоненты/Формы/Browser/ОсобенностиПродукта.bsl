
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// только для обработки
	МодульОбъекта = ПолучитьМодульОбъекта();
	ОбщиеПараметры = МодульОбъекта.ПриНачалеРаботы();	
	ЭлемФормы = ПолучитьЭлементыФормыНаСервере();
	
	ДобавитьИнформациюОВерсии(ЭлемФормы.ВерсияПродукта);
	Заголовок = "";
	Параметры.Свойство("Заголовок", Заголовок);
	Заголовок = Заголовок +" "+ ЛокализацияНазваниеПродукта();
	АдресСтраницы	= "";
	АдресСтраницыССлужебнымиПараметрами = "";
	Параметры.Свойство("АдресСтраницы", АдресСтраницы);
	
	context_param = МодульОбъекта.НастройкиПодключенияПрочитать();
	Если Параметры.Свойство("context_param") Тогда
		// При авторизхации НастройкиПодключенияПрочитать может вернуть НЕОПРЕДЕЛЕНО, да и выбранный домен на форме авторизации отличается
		context_param = Параметры.context_param;
	КонецЕсли;
	Если get_prop(get_prop(context_param, "public"), "web_interface") = "BrowserSabyPlugin" Тогда
		Префикс = "http://localhost:9100/?pool=ExtLongPollingProxy&method=ExtLongPollingProxy.UI&id=0&protocol=6&params=eyJwYXRoIjogImluZGV4MUMuaHRtbCJ9&target=";  
		АдресСтраницы = СтрЗаменить(АдресСтраницы, "-ie-1c.saby", "-lpp1c.sbis");
		АдресСтраницы = СтрЗаменить(АдресСтраницы, "-ieg-1c.sbis", "-lpp1c.sbis");
		АдресСтраницы = СтрЗаменить(АдресСтраницы, "-ie-1c.setty", "-lpp1c.setty");
		АдресСтраницы = Префикс + АдресСтраницы;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СформироватьАдресАддона()
	МодульОбъекта = ПолучитьМодульОбъекта();
	api_url = get_prop(context_param, "api_url", МодульОбъекта.ПолучитьСервисПоУмолчанию());
	
	connection_info = МодульОбъекта.API_ADDON_READSYSTEMINFO(Неопределено);		
	АдресСтраницы = api_url+"/integration_config/1CBlockly/page/";
	// АдресСтраницы = АдресСтраницы + "ПриемНаРаботу?";
	АдресСтраницы = АдресСтраницы + "КадровыйУчет?";
	АдресСтраницыССлужебнымиПараметрами = АдресСтраницы;
	Для Каждого Элемент из connection_info Цикл 
		Если Не ЗначениеЗаполнено(Элемент.Значение) Тогда
			Продолжить;
		КонецЕсли;
		АдресСтраницыССлужебнымиПараметрами = АдресСтраницыССлужебнымиПараметрами + "&"+Элемент.Ключ + "=" + Элемент.Значение; 
	КонецЦикла;	
	АдресСтраницыССлужебнымиПараметрами = АдресСтраницыССлужебнымиПараметрами + "&debug=1";
	АдресСтраницыССлужебнымиПараметрами = АдресСтраницыССлужебнымиПараметрами + "&nocheck=1";
	//todo избавиться от типа объекта	
	//АдресСтраницыССлужебнымиПараметрами = АдресСтраницы;
	АдресСтраницы = АдресСтраницыССлужебнымиПараметрами; // для отладки
	Параметры.Свойство("Заголовок", ЛокализацияНазваниеПродукта());
КонецФункции

&НаСервере
Процедура СформироватьАдресСоСлужебнымиПараметрами()
	//60 секнд * 30 минут
	ПериодМеждуЗапрсамиТокенов = 60*15;
	
	МодульОбъекта = ПолучитьМодульОбъекта();
	
	АдресСтраницыССлужебнымиПараметрами = АдресСтраницы;
	Если Не ЭтоАдресСБИС(АдресСтраницы) Тогда
		Возврат;
	КонецЕсли;
	РазрешитьЗакрытиеФормы = Истина;//Установить в лож когда будет открыт редактор BLOKLY
	Если Найти(АдресСтраницыССлужебнымиПараметрами,"?") = 0 Тогда
		АдресСтраницыССлужебнымиПараметрами = АдресСтраницыССлужебнымиПараметрами + "?";
	КонецЕсли;
	Если Найти(АдресСтраницыССлужебнымиПараметрами,"&nocheck=1") = 0 Тогда
		АдресСтраницыССлужебнымиПараметрами = АдресСтраницыССлужебнымиПараметрами + "&nocheck=1";
	КонецЕсли;
	
	//Тикет получаем при открытии формы если нет других открытых форм браузера
	Если context_param <> Неопределено Тогда
		ВремяПредыдущегоЗапросаТокена = get_prop(context_param, "last_token_time");
		НеобходимТикет = Ложь;
		Если ВремяПредыдущегоЗапросаТокена = Неопределено Тогда
			НеобходимТикет = Истина;
			ВремяПредыдущегоЗапросаТокена = ТекущаяДата();
		КонецЕсли;
		Если ТекущаяДата() - ВремяПредыдущегоЗапросаТокена >= ПериодМеждуЗапрсамиТокенов  Тогда
			НеобходимТикет = Истина;
		КонецЕсли;
		
		Если НеобходимТикет Тогда
			Попытка
			   Тикет = МодульОбъекта.ПолучитьТикетТекущейСессии( context_param ); // если сессия не живая, значит пользователь получит окно аунтентификации
			Исключение
				ИнфоОбОшибке = ИнформацияОбОшибке();
				СтруктураОшибки = ExtExceptionAnalyse(ИнфоОбОшибке);
			КонецПопытки;
			АдресСтраницыССлужебнымиПараметрами = АдресСтраницыССлужебнымиПараметрами + ?(ЗначениеЗаполнено(Тикет), "&ticket=" + Тикет, "");
		КонецЕсли;
		//Обновим время обращения за тикетом
		context_param.Вставить("last_token_time", ВремяПредыдущегоЗапросаТокена);
		МодульОбъекта.НастройкиПодключенияЗаписать(context_param);
	КонецЕсли;

	// Привести URL к корректному виду, Первый перефикс параметров в URL должен быть "?"
	УРЛМассивом = СтрРазделитьПодстрокой(АдресСтраницыССлужебнымиПараметрами, "://");
	НовыйУРЛМассивом = Новый Массив;
	Для Каждого СтрокаАдреса Из УРЛМассивом Цикл
		МассивРазложеннаяСтрока = СтрРазделить82(СтрокаАдреса, "&");
		
		НуженЗнакВопроса = Истина;
		Для Каждого ЭлементСтроки Из МассивРазложеннаяСтрока Цикл
			ЭлементСтроки = СтрЗаменить(ЭлементСтроки, "&", "?");
			Если Найти(ЭлементСтроки, "?") Тогда
				НуженЗнакВопроса = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если НуженЗнакВопроса И МассивРазложеннаяСтрока.Количество() > 1 Тогда
			ПерваяСтрока = МассивРазложеннаяСтрока[0] +"?"+ МассивРазложеннаяСтрока[1];
			МассивРазложеннаяСтрока[0] = ПерваяСтрока;
			МассивРазложеннаяСтрока.Удалить(1);
		КонецЕсли;
		
		НовыйУРЛМассивом.Добавить(СтрСоединить82(МассивРазложеннаяСтрока, "&"));
	КонецЦикла;
	АдресСтраницыССлужебнымиПараметрами = СтрСоединить82(НовыйУРЛМассивом, "://");
	
	ПолучитьЭлементыФормыНаСервере().АдресСтраницы.Подсказка = АдресСтраницыССлужебнымиПараметрами;
КонецПроцедуры

&НаСервере
Функция ЭтоАдресСБИС(Адрес)
	Если Найти(Адрес, ".sbis.ru") > 0 ИЛИ  Найти(Адрес, ".saby.ru") > 0 ИЛИ  Найти(Адрес, ".setty.kz") > 0 ИЛИ  Лев(Адрес, 16) = "http://localhost" Тогда
		Возврат Истина;
	Иначе
		Сообщить("Браузер открывает только сервера "+ЛокализацияНазваниеПродукта()+" или localhost (" + Адрес + ")");
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "SabySignOut" Тогда
		Закрыть();
	ИначеЕсли ИмяСобытия = "Saby_ЗавершениеДлительнойОперации" Тогда
		Если Параметр <> Неопределено Тогда
			Результат = ПодготовитьРезультат(Параметр);
			ВернутьРезультат(Результат);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

