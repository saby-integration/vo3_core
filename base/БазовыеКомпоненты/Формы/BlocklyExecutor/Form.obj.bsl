

#Область include_BlocklyExecutor_base_Variables //&НаКлиенте
#КонецОбласти

#Область include_BlocklyExecutor_base_VariableSABYHTTPClient //&НаКлиенте
#КонецОбласти

#Область include_core_base_locale_ЛокализацияНазваниеПродукта //&НаКлиентеНаСервереБезКонтекста
#КонецОбласти

#Область include_BlocklyExecutor_base_Action //&НаКлиентеНаСервереБезКонтекста
#КонецОбласти

#Область include_BlocklyExecutor_base_Workspace //&НаКлиенте
#КонецОбласти

#Область include_BlocklyExecutor_base_BlockTemplates_SimpleBlock //&НаКлиенте
#КонецОбласти

#Область include_BlocklyExecutor_base_Block //&НаКлиенте
#КонецОбласти

#Область include_IntegrationBlockly_base_BlocksOnClient //&НаКлиенте
#КонецОбласти

#Область include_BlocklyExecutor_base_Helper //&НаКлиентеНаСервереБезКонтекста
#КонецОбласти

#Область include_BlocklyExecutor_base_Executor //&НаКлиенте
#КонецОбласти
 
#Область include_BlocklyExecutor_base_Helper_ArrayHelper 
#КонецОбласти

#Область include_core_base_Helpers_РаботаСоСвойствамиСтруктуры //&НаКлиентеНаСервереБезКонтекста
#КонецОбласти     

#Область include_core_base_ExtException 
#КонецОбласти 

#Область include_IntegrationBlockly_base_Blocks //&НаКлиенте
#КонецОбласти

#Область include_BlocklyExecutor_base_Blocks //&НаКлиенте
#КонецОбласти

#Область include_BlocklyExecutor_base_Context //&НаКлиенте
#КонецОбласти 

#Область include_core_base_Helpers_ОбновитьСтруктуру //&НаКлиенте
#КонецОбласти

#Область include_core_base_Helpers_ПреобразованиеТиповТаблицаМассив
#КонецОбласти

#Область include_core_base_Helpers
#КонецОбласти

#Область include_BlocklyExecutor_base_ЗагрузитьФайлыНаДиск //&НаКлиенте
#КонецОбласти

#Область include_BlocklyExecutor_base_СконвертироватьВПДФА3 //&НаКлиенте
#КонецОбласти   

#Область include_core_base_ОсобенностиПлатформы_МодульОбъекта
#КонецОбласти

#Область include_core_base_Helpers_ПреобразованиеТипов
#КонецОбласти

#Область include_BlocklyExecutor_base_INIOperation //&НаКлиенте
#КонецОбласти 

#Область include_BlocklyExecutor_base_Report //&НаКлиенте
#КонецОбласти

#Область include_BlocklyExecutor_base_Отладка //&НаКлиенте
#КонецОбласти

#Область include_core_base_Helpers_ПрикрепленныеФайлы
#КонецОбласти

#Область include_core_base_Helpers_ПрикрепленныеФайлыЭДО
#КонецОбласти      

#Область include_core_base_ОбщийМодульКонфигурации
#КонецОбласти  

#Область include_core_base_Helpers_ОпределениеТиповКонтента
#КонецОбласти

#Область include_core_base_Транспорт_SabyHttpsClient_МодульОбъекта //&НаКлиенте
#КонецОбласти

#Область include_core_base_Транспорт_SabyHttpsClient_ПолучениеКомпоненты 
#КонецОбласти 

#Область include_core_base_Helpers_НастройкиПодключения
#КонецОбласти     

#Область include_core_base_ПроверкаВерсии_ПолучитьИмяФайлаИНомерТекущейВерсии
#КонецОбласти

#Область include_base_НазваниеПродукта
#КонецОбласти  

#Область include_core_base_СтатусыДокументов_МодульОбработки //&НаКлиенте
#КонецОбласти

#Область include_IntegrationBlockly_base_Blocks_Api3Objects //&НаКлиенте
#КонецОбласти

#Область include_core_base_Криптография_БазовыеМеханизмы //&НаКлиенте
#КонецОбласти

#Область include_core_base_Криптография_НаСервере1С   
#КонецОбласти

#Область include_core_base_Криптография_НаКлиенте1С
#КонецОбласти

#Область include_core_base_Криптография_Дистанционная //&НаКлиенте
#КонецОбласти

#Область include_core_base_Криптография_ЛокальнаяНаФорме //&НаКлиенте
#КонецОбласти

#Область include_core_base_ДлительныеОперации
#КонецОбласти

#Область include_BlocklyExecutor_base_APIClient //&НаКлиенте
#КонецОбласти

#Область include_BlocklyExecutor_base_Robots //&НаКлиенте
#КонецОбласти

#Область include_core_base_API //&НаКлиенте
#КонецОбласти

#Область include_base_ОбработчикиСобытий_ПриСозданииНовогоПодключения //&НаКлиенте
#КонецОбласти

#Область include_core_base_Helpers_ПолучитьПодключение //&НаКлиенте
#КонецОбласти

#Область include_BlocklyExecutor_base_API //&НаКлиенте
#КонецОбласти

#Область include_core_base_Helpers_ОбщиеНастройки
#КонецОбласти

#Область include_core_base_ПроверкаВерсии_ВМодулеОбъекта //&НаКлиенте
#КонецОбласти

#Область include_base_ОбработчикиСобытий_ПриОбновленииСБИС
#КонецОбласти

#Область include_core_base_Helpers_FormGetters //&НаКлиенте
#КонецОбласти

#Область include_core_base_ДлительныеОперации_Модуль
#КонецОбласти

#Область include_core_base_ЭДО_МодульОбработки //&НаКлиенте
#КонецОбласти

#Область include_BlocklyExecutor_base_Commands
#КонецОбласти

#Область include_core_base_Helpers_ДвоичныеДанныеПрикрепленногоФайла
#КонецОбласти

#Область include_core_base_Helpers_ВерсияБСП
#КонецОбласти

#Область include_core_base_Helpers_ПослеАвторизации //&НаКлиенте
#КонецОбласти

#Область include_core_base_БазовыеКомпоненты_Формы_BlocklyExecutor_ОсобенностиПродукта
#КонецОбласти

#Область include_core_base_ФоновыеЗадания_МодульФоновогоЗаданияКлиент
#КонецОбласти


&НаКлиенте
Функция ЗапуститьINIФоновымЗаданием(Контекст) Экспорт
	МодульФоновогоЗаданияКлиент().ЗапуститьINIФоновымЗаданием(Контекст.algorithm, Контекст.ПараметрыВызова,
		Контекст.context_params, ЭтаФорма.ВладелецФормы, Контекст.НазваниеОперации);
КонецФункции

&НаКлиенте
Функция ЗапуститьINI(Контекст) Экспорт 
	ТипТранспортаСервер = Транспорт.ЭтоСервер();
	Если ТипТранспортаСервер = Истина Тогда
		ЗапуститьINIФоновымЗаданием(Контекст); 
		Возврат Неопределено;
	КонецЕсли;	
		
	context_param = НастройкиПодключенияПрочитать();

	ПараметрыВызова = ПодготовитьПараметрыЗапускINIФоновымЗаданием(Контекст.algorithm, Контекст.ПараметрыВызова, context_param);
	Результат = API_BLOCKLY_RUN(ПараметрыВызова);
	СтатусВыполнения = get_prop(Результат,"status","");
	ТекстОповещения = "";
	Если СтатусВыполнения = "run" Тогда
		Контекст.ПараметрыВызова.Вставить("current_block",get_prop(Результат,"step",""));
		ОбработчикСледующегоШага = Новый ОписаниеОповещения("ЗапуститьINI", ЭтаФорма, Контекст); 
		ВыполнитьКоманды_Клиент(ОбработчикСледующегоШага, Результат.commands, Результат.commands_data);
		Возврат Неопределено;
	ИначеЕсли СтатусВыполнения = "error" Тогда
		РезультатВыгрузки = get_prop(Результат, "data");
		КартинкаОповещения = "Ошибка32";
		
		Если ТипЗнч(РезультатВыгрузки.detail) = Тип("Строка") Тогда
			ТекстОповещения = СокрЛП(РезультатВыгрузки.message) + ". " +  СокрЛП(РезультатВыгрузки.detail);
		Иначе	
			ТекстОповещения = СокрЛП(РезультатВыгрузки.message) + ". ";
		КонецЕсли;
		// 
		ExtExceptionToJournal(РезультатВыгрузки);
	ИначеЕсли СтатусВыполнения = "complete" Тогда
		Если Не ЗначениеЗаполнено(ТекстОповещения) Тогда
			ТекстОповещения = "Выполнено";
		КонецЕсли;
		
		ДопПараметрыДата = get_prop(Результат, "data");
		КартинкаИмя = get_prop(ДопПараметрыДата, "Картинка");
		Если Не ПустаяСтрока(КартинкаИмя) Тогда
			КартинкаОповещения = КартинкаИмя;
		Иначе
			КартинкаОповещения = "ЗеленаяГалка";
		КонецЕсли;
		КоличествоОбработано	= get_prop(ДопПараметрыДата, "CountConfirmed", 0);
		ВсегоОбъектов			= get_prop(ДопПараметрыДата, "CountObjects", 0);
		КоличествоОшибок		= get_prop(ДопПараметрыДата, "CountErrors", 0);
		Если	КоличествоОшибок > 0
			ИЛИ КоличествоОшибок + КоличествоОбработано <> ВсегоОбъектов Тогда
			СтатусВыполнения = "error";  
			ТекстОповещения = "Выполнено "+КоличествоОбработано+ " из "+ВсегоОбъектов;
			КартинкаОповещения = "Ошибка32";
		КонецЕсли;	
	КонецЕсли;   
	НавигационнаяСсылкаОповещения = Неопределено;
	Если 	Контекст.НазваниеОперации = "Отправка в "+ЛокализацияНазваниеПродукта() //команда - "Отправка в СБИС"
				или 
			Контекст.НазваниеОперации = "Выгрузка в 1С"  //Действие -"Выгрузка в 1С" с формы задач
				Тогда
		НавигационнаяСсылкаОповещения = ПолучитьАдресСтраницыОтчетОЗагрузке(ПараметрыВызова["params"]["api_url"],ПараметрыВызова["operation_uuid"]);
	КонецЕсли;
	СообщенияДата = get_prop(РезультатВыгрузки, "data");
	мСообщений = Неопределено;
	Если ТипЗнч(СообщенияДата) = Тип("Структура") или ТипЗнч(СообщенияДата) = Тип("Соответствие") Тогда
		мСообщений = get_prop(СообщенияДата, "detail");
	КонецЕсли;
	Если ТипЗнч(мСообщений) = Тип("Массив") Тогда
		ТекстОповещения_ = ТекстОповещения;
		Для Каждого ДанныеСообщения Из мСообщений Цикл
			ТекстОповещения		= get_prop(ДанныеСообщения, "message") +" "+ get_prop(ДанныеСообщения, "detail");
			ПоказатьОповещениеПользователя(ТекстОповещения, НавигационнаяСсылкаОповещения,ТекстОповещения,БиблиотекаКартинок[КартинкаОповещения],СтатусОповещенияПользователя.Важное);
		КонецЦикла;
		ТекстОповещения = ТекстОповещения_;
		РезультатВыгрузки.data.Вставить("detail", "");
	КонецЕсли;
	//Итоговое
	ПоказатьОповещениеПользователя(Контекст.НазваниеОперации, НавигационнаяСсылкаОповещения,ТекстОповещения,БиблиотекаКартинок[КартинкаОповещения],СтатусОповещенияПользователя.Важное);
КонецФункции


&НаКлиенте
Функция ПолучитьАдресСтраницыОтчетОЗагрузке(URL, extSyncDocId) 
	Возврат URL+"/ext-sync-doc/page/?extSyncDocId="+extSyncDocId; 	 	
КонецФункции

Функция СообщениеПрогресса()
	Возврат "";
КонецФункции 

&НаКлиенте
Функция ИнициироватьТранспорт() Экспорт
	context_param = НастройкиПодключенияПрочитать();
	Транспорт = ПолучитьФормуТранспорта(context_param);
КонецФункции

Функция ЭтотОбъектНаСервере()
	Возврат ЭтаФорма;
КонецФункции

&НаКлиенте 
Функция ЭтоСервер() Экспорт
	context_params = НастройкиПодключенияПрочитать();
	ВидТранспорта = ВидТранспорта(context_params);
	Если ВидТранспорта = "ExtSdk2" Или ВидТранспорта = "SabyPluginConnector"  Тогда 
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции
