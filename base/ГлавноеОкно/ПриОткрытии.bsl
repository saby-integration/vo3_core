&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПолучитьИмяФормы();
	МодульОбъекта = МодульОбъекта();
	ОбщиеПараметры = МодульОбъекта.ПриНачалеРаботы();	
	context_param = МодульОбъекта.НастройкиПодключенияПрочитать();
	Тема = ?(context_param = Неопределено, МодульОбъекта.ТемаПоУмолчанию(), get_prop(context_param, "Тема"));
	ПубличныеОбщиеНастройки	= get_prop(ОбщиеПараметры, "public");
	auto_update = get_prop(ПубличныеОбщиеНастройки, "auto_update", Ложь);
	ДанныеФильтра = Новый Структура("ПараметрыОтображения, Значения");	
	ТекущийРаздел = Новый Структура("Идентификатор, ПараметрыОтображения, Шаблон");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии()
	ТранспортИнтеграции = ПолучитьФормуТранспорта(context_param);
	BlocklyExecutor = ПолучитьФормуBlockly();

	ПолучитьРеквизитОбъектаДокумента();
	Если auto_update Тогда
		СбисОбновитьОбработкуНаКлиенте();
	КонецЕсли;
	КэшФорм = Новый Структура("Формы, ИменаФорм", Новый Соответствие);
	КэшФорм.Вставить("ПутьКФормам", ПутьКФормамОбработки());
	Если Тема = "Saby" Тогда
		ФормаБраузера = ПолучитьФормуОбработки("Browser", КэшФорм.ПутьКФормам);
		ФормаБраузера.context_param = context_param;
		ФормаБраузера.Открыть();
		ЭтаФорма.Закрыть();
		Возврат;
	КонецЕсли;
	ВладелецФормы = Неопределено;
	
	#Область include_base_ОбработчикиСобытий_ПриОткрытииЭДО
	#КонецОбласти
	#Область include_base_ОбработчикиСобытий_ПриОткрытии
	#КонецОбласти
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииПослеАвторизации(Результат, ДопПараметры = Неопределено) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	context_param.Вставить("Тема", Тема);
	Попытка
		КэшФорм.ИменаФорм = ПослеОткрытияНаКлиенте();
		Если ЗначениеЗаполнено(ТекущийРаздел["Идентификатор"]) Тогда
			ПоказатьШаблон();
		КонецЕсли;
	Исключение
		ИнфОбОшибке = ИнформацияОбОшибке();
		СтруктураОшибки = ExtExceptionAnalyse(ИнфОбОшибке);
		Картинка = КартинкаОшибка();
		ПоказатьОповещениеПользователя(
			"Ошибка",,
			СтруктураОшибки.message,
			Картинка,
			СтатусОповещенияПользователя.Важное);	
	КонецПопытки;
КонецПроцедуры


&НаКлиенте
Функция ПослеОткрытияНаКлиенте(ДопПараметры = Неопределено)
	Попытка
		connection_info = BlocklyExecutor.ПослеАутентификации(context_param);
	Исключение
		ТекущийРаздел.Вставить("Шаблон", "СтраницаЗаглушка");
		ИнфОбОшибке = ИнформацияОбОшибке();
		ВызватьИсключение ИнфОбОшибке.Описание;
	КонецПопытки;
	ОбновитьЗаголовокФормы();
	ПостроитьАккордеон(ДопПараметры);
	
	ПараметрыКоманды = Новый Структура("algorithm, endpoint, params", "Конфигурация", "СоответствиеФорм");
	Попытка
		РезультатИни = BlocklyExecutor.LocalCalcIni(ПараметрыКоманды);
		Если РезультатИни["status"] = "error" Тогда
			ВызватьИсключение NewExtExceptionСтрока(, "Ошибка выполнения ini: '" + ПараметрыКоманды["algorithm"]
				+ "', endpoint: '" + ПараметрыКоманды["endpoint"] + "'" + Символы.ПС + РезультатИни.data.message,
			РезультатИни.data.detail, РезультатИни.data.action);
		КонецЕсли;
		ФормыПросмотраДокумента = РезультатИни.data;
	Исключение
		ИнфОбОшибке = ИнформацияОбОшибке();
		ФормыПросмотраДокумента = Неопределено;
	КонецПопытки;
	
	Возврат	ФормыПросмотраДокумента;
КонецФункции

Функция ИзменитьНаПрямуюСсылку(СсылкаIE) 
	ПреобразованнаяСсылкаIE = СтрЗаменить(СсылкаIE, "://ie-1c.saby.", "://online.sbis.");
	ПреобразованнаяСсылкаIE = СтрЗаменить(ПреобразованнаяСсылкаIE, "://fix-ie-1c.saby.", "://fix-online.sbis.");
	ПреобразованнаяСсылкаIE = СтрЗаменить(ПреобразованнаяСсылкаIE, "://test-ie-1c.saby.", "://test-online.sbis.");
	ПреобразованнаяСсылкаIE = СтрЗаменить(ПреобразованнаяСсылкаIE, "://pre-test-ie-1c.saby.", "://pre-test-online.sbis.");
	Возврат ПреобразованнаяСсылкаIE;
КонецФункции

Процедура ОбновитьЗаголовокФормы() 
	НовыйЗаголовок		= СтрЗаменить(СтрЗаменить(СокрЛП(ИзменитьНаПрямуюСсылку(context_param.api_url)), "https:", ""), "/", "");;
	ДобавитьКЗаголовку	= "";
	Если ЗначениеЗаполнено(context_param.user_fio) Тогда
		ДобавитьКЗаголовку = context_param.user_fio;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(context_param.DemoLicense) Тогда
		Если Не ПустаяСтрока(ДобавитьКЗаголовку) Тогда
			ДобавитьКЗаголовку = ДобавитьКЗаголовку + " ";
		КонецЕсли;
		МодульОбъекта = МодульОбъекта();
		DemoLicense = МодульОбъекта.ПреобразоватьСтрокуВДату("yyyy-MM-dd", context_param.DemoLicense);
		Если DemoLicense > ТекущаяДата() Тогда
			ДобавитьКЗаголовку = ДобавитьКЗаголовку + "Демо-версия до " + Формат(DemoLicense, "ДФ=dd.MM.yyyy");
		Иначе
			ДобавитьКЗаголовку = ДобавитьКЗаголовку + "Пробный период истек";
		КонецЕсли;
	КонецЕсли;
	Если Не ПустаяСтрока(ДобавитьКЗаголовку) Тогда
		НовыйЗаголовок = НовыйЗаголовок + " (" + ДобавитьКЗаголовку + ")";
	КонецЕсли;
	ЭтаФорма.Заголовок = НовыйЗаголовок;
КонецПроцедуры
