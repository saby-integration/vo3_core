
&НаСервере
Процедура ЗаполнитьКолонкиТаблицы() Экспорт
	ЭлемФормы = ПолучитьЭлементыФормыНаСервере();
	ИмяТаблицы = ТекущийРаздел["template"];
	
	ТабПоле = ЭлемФормы[ИмяТаблицы];
	Таблица = ДанныеФормыВЗначение(ЭтаФорма[ИмяТаблицы], Тип("ТаблицаЗначений"));
	Таблица.Очистить();
	Таблица.Колонки.Очистить();
		
	СоздатьРеквизитыТаблицыФормы(Таблица, ИмяТаблицы);
	
	Если ТекущийРаздел.Свойство("ЭлементыФормы") Тогда
		Для Каждого Элем Из ТекущийРаздел.ЭлементыФормы Цикл
			ЭлемФормы.Удалить(ЭлемФормы.Найти(Элем));
		КонецЦикла;
		ТекущийРаздел.ЭлементыФормы.Очистить();
	Иначе
		ТекущийРаздел.Вставить("ЭлементыФормы", Новый Массив());
	КонецЕсли;
	
	Элем = ЭлемФормы.Добавить(ИмяТаблицы + "Отмечен", Тип("ПолеФормы"), ТабПоле);
	Элем.Вид = ВидПоляФормы.ПолеФлажка;
	Элем.ПутьКДанным = ИмяТаблицы + "." + "Отмечен";
	ТекущийРаздел.ЭлементыФормы.Добавить(ИмяТаблицы + "Отмечен");
	Для Каждого Колонка Из ТекущийРаздел.ПараметрыОтображения["Columns"] Цикл
		Если get_prop(Колонка, "Visibility") = Истина Тогда
			Если get_prop(Колонка, "More") = Истина Тогда
				
				Родитель = ЭлемФормы.Добавить(ИмяТаблицы + Колонка["Name"] + "ЗагрузитьЕще", Тип("ГруппаФормы"), ТабПоле);
				Родитель.Вид = ВидГруппыФормы.ГруппаКолонок;
				ТекущийРаздел.ЭлементыФормы.Добавить(ИмяТаблицы + Колонка["Name"] + "ЗагрузитьЕще");
				Элем = ЭлемФормы.Добавить(ИмяТаблицы + "ЗагрузитьЕще", Тип("ПолеФормы"), Родитель);
				Элем.Вид = ВидПоляФормы.ПолеНадписи;
				Элем.ГиперссылкаЯчейки = Истина;
				Элем.ПутьКДанным = ИмяТаблицы + "." + "ЗагрузитьЕще";
				Элем.ОтображатьВШапке = Ложь;
				Элем.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
				Элем = ЭлемФормы.Добавить(ИмяТаблицы + Колонка["Name"], Тип("ПолеФормы"), Родитель);
			Иначе	
				Элем = ЭлемФормы.Добавить(ИмяТаблицы + Колонка["Name"], Тип("ПолеФормы"), ТабПоле);
				ТекущийРаздел.ЭлементыФормы.Добавить(ИмяТаблицы + Колонка["Name"]);
			КонецЕсли;
			Элем.Вид = ВидПоляФормы.ПолеНадписи;
			Элем.ПутьКДанным = ИмяТаблицы + "." + Колонка["Name"];
			Элем.Заголовок = Колонка["Title"];
			Если get_prop(Колонка, "Properties") <> Неопределено Тогда 
				Для Каждого СвойствоПоля Из Колонка["Properties"] Цикл
					Элем[СвойствоПоля.Ключ] = СвойствоПоля.Значение;
				КонецЦикла;
			КонецЕсли;
			Картинка = get_prop(Колонка, "RowIcon");
			Если Картинка <> Неопределено Тогда
				Элем.Вид = ВидПоляФормы.ПолеКартинки;
				Элем.КартинкаЗначений = ЭлемФормы[Картинка].Картинка
			Конецесли;
		КонецЕсли;
	КонецЦикла;
	ЗначениеВДанныеФормы(Таблица, ЭтаФорма[ИмяТаблицы]);
	УстановитьУсловноеОформление();
КонецПроцедуры

Процедура СоздатьРеквизитыТаблицыФормы(Таблица, ИмяТаблицы)
	ТекущиеРеквизиты = ПолучитьРеквизиты(ИмяТаблицы);
	РеквизитыУдалить = Новый Массив();
	Для Каждого Рек Из ТекущиеРеквизиты Цикл
		РеквизитыУдалить.Добавить(Рек.Путь+"."+Рек.Имя);
	КонецЦикла;
	Реквизиты = Новый Массив();
	КвалификаторыСтроки = Новый КвалификаторыСтроки();
	ОписаниеТипаСтрока = Новый ОписаниеТипов("Строка", ,КвалификаторыСтроки);
	Для Каждого Колонка Из ТекущийРаздел.ПараметрыОтображения["Columns"] Цикл
		ОписаниеТипа = ОписаниеТипаСтрока;
		Тип = get_prop(Колонка, "Type");
		Если Тип <> Неопределено Тогда
			Если Тип = "Соответствие" Тогда
				ОписаниеТипа = Новый ОписаниеТипов();
			Иначе
				ОписаниеТипа = Новый ОписаниеТипов(Колонка["Type"]);
			КонецЕсли;
		КонецЕсли;
		Рек = Новый РеквизитФормы(Колонка["Name"], ОписаниеТипа, ИмяТаблицы);
		Реквизиты.Добавить(Рек);
		Таблица.Колонки.Добавить(Колонка["Name"], ОписаниеТипа);
		Если get_prop(Колонка, "More") = Истина Тогда
			Рек = Новый РеквизитФормы("ЗагрузитьЕще", ОписаниеТипаСтрока, ИмяТаблицы);
			Реквизиты.Добавить(Рек);
			Таблица.Колонки.Добавить("ЗагрузитьЕще", ОписаниеТипаСтрока);
		КонецЕсли;
	КонецЦикла;
	
	Рек = Новый РеквизитФормы("Отмечен", Новый ОписаниеТипов("Булево"), ИмяТаблицы);
	Реквизиты.Добавить(Рек);
	Таблица.Колонки.Добавить("Отмечен", Новый ОписаниеТипов("Булево"));
	
	ИзменитьРеквизиты(Реквизиты, РеквизитыУдалить);
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписок() Экспорт
	ЭлемФормы = ПолучитьЭлементыФормыНаСервере();
	ИмяТаблицы = ТекущийРаздел["template"];
	
	ТабПоле = ЭлемФормы[ИмяТаблицы];
	Таблица = ДанныеФормыВЗначение(ЭтаФорма[ИмяТаблицы], Тип("ТаблицаЗначений"));
	ЗаполнитьДанныеСписка(Таблица);
	ЗначениеВДанныеФормы(Таблица, ЭтаФорма[ИмяТаблицы]);
	ТабПоле.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	//
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Представление = "СозданПрограммно";
	//Отбор
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПлоскийСписок.ЗагрузитьЕще");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	//Оформление
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	//Поле оформления
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ПлоскийСписокЗагрузитьЕще");
	
	//
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Представление = "СозданПрограммно";
	//Отбор
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПлоскийСписок.ЗагрузитьЕще");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Заполнено;
	
	//Оформление
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	//Поле оформления
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ПлоскийСписокОтмечен");
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ПлоскийСписокСтатусСБИС");
	
КонецПроцедуры

