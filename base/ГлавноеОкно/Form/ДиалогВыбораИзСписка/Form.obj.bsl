
&НаКлиенте
Перем КэшФорм Экспорт;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПолучитьИмяФормы();
	МодульОбъекта = ПолучитьМодульОбъекта();
	ОбщиеПараметры = МодульОбъекта.ПриНачалеРаботы();	
	context_param = МодульОбъекта.НастройкиПодключенияПрочитать();
	ПубличныеОбщиеНастройки	= get_prop(ОбщиеПараметры, "public");
	
	ДанныеФильтра = Новый Структура("ПараметрыОтображения, Значения");	
	ТекущийРаздел = Новый Структура("ПараметрыОтображения, template");
	
	FILTER_NAME = get_prop(Параметры, "FILTER_NAME", "");
	ВидДанных1С = get_prop(Параметры, "ВидДанных1С", "");
	ТипДанных1С = get_prop(Параметры, "ТипДанных1С", "");
	
	ТекущийРаздел.Вставить("template", "ПлоскийСписок");
	ТекущийРаздел.Вставить("ВидДанных1С", ВидДанных1С);
	ТекущийРаздел.Вставить("ТипДанных1С", ТипДанных1С);
	ТекущийРаздел.Вставить("ini_name", get_prop(Параметры, "INI"));
	ТекущийРаздел.Вставить("ОбработчикСтрокиРезультата", get_prop(Параметры, "ENDPOINT"));
	ТекущийРаздел.Вставить("CONST_FILTER", get_prop(Параметры, "CONST_FILTER"));
	ТекущийРаздел.Вставить("FILTER", get_prop(Параметры, "FILTER"));
	ТекущийРаздел.Вставить("МножественныйВыбор", get_prop(Параметры, "MULTI"));
	
	ЭтаФорма.Заголовок = ТекущийРаздел.ТипДанных1С;
	
	ПоказатьШаблон(ТекущийРаздел);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииПослеАвторизации(Результат, ДопПараметры = Неопределено) Экспорт
	// Заглушка
	Возврат;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	КэшФорм = Новый Структура("Формы, ИменаФорм", Новый Соответствие);
	КэшФорм.Вставить("ПутьКФормам", ПутьКФормамОбработки());
КонецПроцедуры

&НаСервере
Процедура ПоказатьШаблон(ТекущийРаздел)
	ЭлемФормы = ПолучитьЭлементыФормыНаСервере();
	ПанельКонтент = ЭлемФормы.ПанельКонтент;
	МодульОбъекта = ПолучитьМодульОбъекта();
	ИмяИни = ТекущийРаздел["ini_name"];
	ПараметрыКоманды = Новый Структура("ini_name, endpoint, params", ИмяИни, "view");
	ПараметрыОтображения = МодульОбъекта.LocalCalcIni(ПараметрыКоманды).data;
	Шаблон = ПараметрыОтображения["Template"];
	ТекущийРаздел.Вставить("template", Шаблон);
	ПанельКонтент.ТекущаяСтраница = ПолучитьСтраницу(ПанельКонтент, "Страница" + Шаблон);
	Если Шаблон = "ПлоскийСписок" Тогда
		ПлоскийСписокПриОткрытии(ПараметрыОтображения);
	ИначеЕсли Шаблон = "ИерархическийСписок" Тогда
        ИерархическийСписокПриОткрытии(ПараметрыОтображения)
	Иначе
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНажатие(Элемент)
	Если get_prop(ТекущийРаздел, "МножественныйВыбор") <> Истина Тогда
		ЭлемФормы = ПолучитьЭлементыФормы();
		ВыбраннаяСтрокаДанные = ЭлемФормы[ТекущийРаздел["template"]].ТекущиеДанные;
		ВернутьРезультат(ВыбраннаяСтрокаДанные);
		Возврат;
	КонецЕсли;
	// Множественный выбор
	СписокОтмеченных = СписокОтмеченныхЗаписей();
	ВернутьРезультат(СписокОтмеченных);
КонецПроцедуры

#Область include_core_base_ВстраиваниеВФормы_КомандаПоиск
#КонецОбласти

&НаКлиенте
Процедура ВыборИзСписка(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если Колонка.Имя = "ПлоскийСписокЗагрузитьЕще" Тогда
		ПлоскийСписок.Удалить(Элемент.ТекущиеДанные);
		ЗагрузитьЕщеПлоскийСписокНажатие();
		Возврат;	
	КонецЕсли;
	ВыбраннаяСтрокаДанные = Элемент.ТекущиеДанные;
	ВернутьРезультат(ВыбраннаяСтрокаДанные);
КонецПроцедуры

&НаСервере
Процедура ОбработатьДанныеСписка(ПараметрыКоманды, МассивДанных) Экспорт
	МодульОбъекта = ПолучитьМодульОбъекта();
	НовыйМассив = Новый Массив;
	// Обработаем каждую строку в указанном эндпоинте из инишки
	Для Каждого ЭлементМассива Из МассивДанных Цикл
		ПараметрыКоманды.Вставить("ВыбраннаяЗапись", ЭлементМассива);
		РезультатИни = МодульОбъекта.LocalCalcIni(ПараметрыКоманды);
		Если РезультатИни["status"] = "error" Тогда
			ВызватьИсключение NewExtExceptionСтрока(, "Ошибка выполнения ini: '" + ПараметрыКоманды["ini_name"]
					+ "', endpoint: '" + ПараметрыКоманды["endpoint"] + "'" + Символы.ПС + РезультатИни.data.message,
				РезультатИни.data.detail, РезультатИни.data.action);
		КонецЕсли;	
		НовыеДанные = РезультатИни.data;
		НоваяСтрока = Новый Структура;
		Для Каждого ЭлементДанных Из НовыеДанные Цикл
			НоваяСтрока.Вставить(ЭлементДанных.Ключ, ЭлементДанных.Значение);
		КонецЦикла;
		НовыйМассив.Добавить(НоваяСтрока);
	КонецЦикла;
	МассивДанных = НовыйМассив;
КонецПроцедуры

&НаКлиенте
Процедура ВернутьРезультат(Результат)
	
	Если ТипЗнч(Результат) <> Тип("Массив") Тогда
		МассивРезультат = Новый Массив;
		МассивРезультат.Добавить(Результат);
	Иначе
		МассивРезультат = Результат;
	КонецЕсли;
	
	Данные = Новый Массив;
	Для Каждого ЭлементМассива Из МассивРезультат Цикл
		НоваяСтрока = Новый Структура;
		Для Каждого Колонка Из ТекущийРаздел.ПараметрыОтображения["Columns"] Цикл
			ПутьКДанным = Колонка["Name"];
			НоваяСтрока.Вставить(Колонка["Data"], ЭлементМассива[ПутьКДанным]);
		КонецЦикла;
		Данные.Добавить(НоваяСтрока);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(get_prop(ТекущийРаздел, "ОбработчикСтрокиРезультата")) Тогда
		ПараметрыКоманды = Новый Структура("params");
		ПараметрыКоманды.Вставить("ini_name", ТекущийРаздел["ini_name"]);
		ПараметрыКоманды.Вставить("endpoint", ТекущийРаздел["ОбработчикСтрокиРезультата"]);
		ОбработатьДанныеСписка(ПараметрыКоманды, Данные);
	КонецЕсли;
	
	// Единичный выбор
	Если get_prop(ТекущийРаздел, "МножественныйВыбор") <> Истина Тогда
		Если ТипЗнч(Результат) <> Тип("Массив") Тогда
			Если Данные.Количество() > 0 Тогда
				Данные = Данные[0];
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// Множественный выбор
	ОповеститьОВыборе(Данные);	
	Если Открыта() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#Область include_core_base_Helpers_FormGetters
#КонецОбласти

#Область include_core_base_Helpers_Картинки
#КонецОбласти

#Область include_core_base_ОсобенностиПлатформы_РаботаСЭлементамиФормы
#КонецОбласти

#Область include_core_base_ГлавноеОкно_ПлоскийСписок
#КонецОбласти

#Область include_core_base_ГлавноеОкно_ИерархическийСписок
#КонецОбласти

#Область include_core_base_ГлавноеОкно_ПанельОпераций
#КонецОбласти

#Область include_core_base_ГлавноеОкно_Фильтр
#КонецОбласти

#Область include_core_base_ГлавноеОкно_ОткрывалкаФорм
#КонецОбласти

#Область include_core_base_ГлавноеОкно_Form_ДиалогВыбораИзСписка_ОсобенностиПриложения
#КонецОбласти

