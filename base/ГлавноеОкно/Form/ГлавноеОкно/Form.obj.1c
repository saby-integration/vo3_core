&НаКлиенте
Перем КэшФорм Экспорт;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	МодульОбъекта = ПолучитьМодульОбъекта();
	ОбщиеПараметры = МодульОбъекта.ПриНачалеРаботы();	
	context_param = МодульОбъекта.НастройкиПодключенияПрочитать();
	Тема = ?(context_param = Неопределено, МодульОбъекта.ТемаПоУмолчанию(), get_prop(context_param, "Тема"));
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии()
	КэшФорм = Новый Структура("Формы, ИменаФорм", Новый Соответствие);
	КэшФорм.Вставить("ПутьКФормам", ПутьКФормамОбработки());
	Если Тема = "Saby" Тогда
		ФормаБраузера = ПолучитьФормуОбработки("Browser", КэшФорм.ПутьКФормам);
		ФормаБраузера.context_param = context_param;
		ФормаБраузера.Открыть();
		ЭтаФорма.Закрыть();
		Возврат;
	КонецЕсли;
	Если НЕ has_prop(context_param, "session") Тогда
		формаАвторизации = ПолучитьФормуОбработки("Вход", КэшФорм.ПутьКФормам,,ЭтаФорма);
		context_param = формаАвторизации.ОткрытьМодально();
	КонецЕсли;
	ДанныеФильтра = Новый Структура("ПараметрыОтображения, Значения");	
	ТекущийРаздел = Новый Структура("ПараметрыОтображения, template, iniName");
	КэшФорм.ИменаФорм = ПослеОткрытия();
КонецПроцедуры

&НаСервере
Функция ПослеОткрытия()
	МодульОбъекта = ПолучитьМодульОбъекта();
	connection_info = МодульОбъекта.ПослеАутентификации(context_param);
	Если get_prop(connection_info["ExtSysSettings"], "Аккордион") <> Неопределено Тогда
		ПостроитьАккордеон(connection_info["ExtSysSettings"]["Аккордион"]["data"]["Accordion"], "TasksInWork");
	КонецЕсли;
	
	ПараметрыКоманды = Новый Структура("ini_name, endpoint, params", "Конфигурация", "СоответствиеФорм");
	ФормыПросмотраДокумента = МодульОбъекта.LocalCalcIni(ПараметрыКоманды).data;
	Возврат	ФормыПросмотраДокумента;
КонецФункции

#Область include_core_base_ГлавноеОкно_Аккордеон
#КонецОбласти


&НаКлиенте
Функция ОбработатьДействиеНаКлиенте(ИмяДействия, Параметры)
	Возврат ОбработатьДействие(ИмяДействия, Параметры);	
КонецФункции 

&НаСервере
Функция ОбработатьДействие(ИмяДействия, Параметры)
	МодульОбъекта = ПолучитьМодульОбъекта();
	Если ИмяДействия = "ADDON_NAVIGATE" Тогда
		ПараметрыВызова = Новый Соответствие();
		ПараметрыВызова.Вставить("template", "ПлоскийСписок");
		ПараметрыВызова.Вставить("iniName", Параметры+"_list");
		ПоказатьШаблон(ПараметрыВызова);
	ИначеЕсли ИмяДействия = "ADDON_READSYSTEMINFO" Тогда
		Результат = МодульОбъекта.API_ADDON_READSYSTEMINFO(ПараметрыВызова);	
	Иначе
		ВызватьИсключение NewExtExceptionСтрока(,"Неизвестная команда", ИмяДействия);
	КонецЕсли;
	//Возврат ПодготовитьРезультат(Результат);
КонецФункции

&НаСервере
Процедура ПоказатьШаблон(ПараметрыВызова)
	ЭлемФормы = ПолучитьЭлементыФормыНаСервере();
	ПанельКонтент = ЭлемФормы.ПанельКонтент;
	Шаблон = ПараметрыВызова["template"];
	ТекущийРаздел.Вставить("template", Шаблон);
	ПанельКонтент.ТекущаяСтраница = ПолучитьСтраницу(ПанельКонтент, "Страница" + Шаблон);
	Если Шаблон = "ПлоскийСписок" Тогда
		ПлоскийСписокПриОткрытии(ПараметрыВызова);
	ИначеЕсли Шаблон = "ИерархическийСписок" Тогда

	Иначе
		
	КонецЕсли;
		
КонецПроцедуры

#Область include_core_base_ГлавноеОкно_ПлоскийСписок
#КонецОбласти

#Область include_core_base_ГлавноеОкно_ПанельОпераций
#КонецОбласти

#Область include_core_base_ГлавноеОкно_Фильтр
#КонецОбласти

Процедура ЗагрузитьВСБИС(Элемент)
	СписокОтмеченных = СписокОтмеченныхЗаписей();
	Если СписокОтмеченных.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивОбъектов = Новый Массив();
	Для Каждого Строка Из СписокОтмеченных Цикл
		Если Строка.Отмечен Тогда
			API3_ref = Новый Структура;
			API3_ref.Вставить("ИдИС",			СокрЛП(Строка.Документ.УникальныйИдентификатор()) );
			API3_ref.Вставить("ТипИС",			"Документы" );  
			
			ТипЗначения = ТипЗнч(Строка.Документ);
			ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗначения);
			API3_ref.Вставить("ИмяИС",			ОбъектМетаданных.Имя );
			API3_ref.Вставить("ini_name",		"СинхВыгрузка_"+ОбъектМетаданных.Имя );
			//API3_ref.Вставить("ini_name",		ОбъектМетаданных.Имя + "_read" );
			API3_ref.Вставить("Название",		СокрЛП(Строка.Документ) );
			МассивОбъектов.Добавить(API3_ref);	
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыВызова	= Новый Соответствие();
	ПараметрыВызова.Вставить("params", context_param );
	ПараметрыВызова.Вставить("commands_result",Новый Массив);
	ПараметрыВызова.Вставить("endpoint","");
	ПараметрыВызова.Вставить("operation_uuid", СокрЛП(Новый УникальныйИдентификатор));
	ПараметрыВызова.Вставить("ini_name","Документы_send");
	ConnectionId	= Неопределено;
	context_param.Свойство("ConnectionId", ConnectionId);
	ПараметрыВызова.Вставить("connection_uuid", ConnectionId);
	ПараметрыВызова.Вставить("object",Новый Соответствие());
	ПараметрыВызова["object"].Вставить("list_doc_ref", МассивОбъектов); 
	
	МодульОбъекта = ПолучитьМодульОбъекта();
	Результат = МодульОбъекта.LocalCalcIni(ПараметрыВызова);
КонецПроцедуры

&НаКлиенте
Процедура Обработать(Элемент)
	Сообщить("Обработать");
КонецПроцедуры
&НаКлиенте
Процедура Обработать2(Элемент)
	Сообщить("Обработать2");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастроек(Элемент) Экспорт    
	
	Форма = ПолучитьФормуОбработки("Настройки", КэшФорм.ПутьКФормам, , ЭтаФорма);
	Форма.context_param = context_param;
	Форма.Открыть();
	
КонецПроцедуры

#Область include_core_base_ГлавноеОкно_ОткрывалкаФорм
#КонецОбласти

#Область include_core_base_Helpers_FormGetters
#КонецОбласти

#Область include_core_src_DataProcessor_SABY_ОсобенностиПлатформы_РаботаСЭлементамиФормы
#КонецОбласти

#Область include_core_base_ГлавноеОкно_ОсобенностиПриложения
#КонецОбласти

Процедура НалоговыйМониторингНажатие(Кнопка)
	ФормаБраузера = ПолучитьФормуОбработки("Browser", КэшФорм.ПутьКФормам,,ЭтаФорма);
	ФормаБраузера.context_param = context_param;
	ФормаБраузера.Параметры = Новый Структура("АдресСтраницы", context_param.api_url+"/page/import-taxon");
	ФормаБраузера.Открыть();
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Saby_ЗакрытиеФормыАвторизации" Тогда
    	МодульОбъекта = ПолучитьМодульОбъекта();
		context_param = МодульОбъекта.НастройкиПодключенияПрочитать();
	КонецЕсли;
КонецПроцедуры
