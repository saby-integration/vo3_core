
#Область include_core_base_Helpers_РаботаСоСвойствамиСтруктуры
#КонецОбласти

#Область include_core_base_ОсобенностиПлатформы_МодульФормы
#КонецОбласти

Процедура ЗаполнитьЭлементыФормы()
	ЭлемФормы = ПолучитьЭлементыФормыНаСервере();
	ЭлемФормы.ПанельПериод.Видимость = Ложь;
	ОсновнаяПанель = ЭлемФормы.ОсновнаяПанель;
	СоздатьРеквизитыФормы();
	Для Каждого Поле Из ДанныеФильтра.ПараметрыОтображения Цикл
		ЭтаФорма[Поле["Name"]] = get_prop(ДанныеФильтра.Значения, Поле["Name"]);
		Если Нрег(Поле["Name"]) = "фильтрпериод" Или Нрег(Поле["Name"]) = "фильтрдатанач" Или Нрег(Поле["Name"]) = "фильтрдатакнц" Тогда
			Если ЭлемФормы.ПанельПериод.Видимость = Ложь Тогда
				ЭлемФормы.ПанельПериод.Видимость = Истина;
			КонецЕсли;
		ИначеЕсли ВРег(Поле["FieldType"]) = "ПОЛЕСВЯЗИ" Тогда
			Элем = ДобавитьЭлементФормы(Поле["Name"], Тип("ПолеФормы"), ОсновнаяПанель);
			Элем.Вид = ВидПоляФормы["ПолеВвода"];
			Элем.ПутьКДанным = Поле["Name"];
			Элем.Заголовок = Поле["Title"];
			Элем.КнопкаОчистки = Истина;
			Элем.КнопкаВыбора = Истина;
			Элем.КнопкаОткрытия = Истина;
			УстановитьДействиеНаЭлемент(Элем, "НачалоВыбора", "ПолеСвязиНачалоВыбора");
		Иначе
			Элем = ЭлемФормы.Добавить(Поле["Name"], Тип("ПолеФормы"), ОсновнаяПанель);
			Элем.Вид = ВидПоляФормы[Поле["FieldType"]];
			Элем.ПутьКДанным = Поле["Name"];
			Элем.Заголовок = Поле["Title"];
			ЗаполнитьСвойстваЭлементаФормы(Элем, Поле["Properties"]);
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

Процедура СоздатьРеквизитыФормы()
	Реквизиты = Новый Массив();
	КвалификаторыСтроки = Новый КвалификаторыСтроки();
	ОписаниеТипаСтрока = Новый ОписаниеТипов("Строка", ,КвалификаторыСтроки);
	МассивФильтровПериода = Новый Массив;
	МассивФильтровПериода.Добавить("фильтрпериод");
	МассивФильтровПериода.Добавить("фильтрдатанач");
	МассивФильтровПериода.Добавить("фильтрдатакнц");
	Для Каждого Поле Из ДанныеФильтра.ПараметрыОтображения Цикл
		Если МассивФильтровПериода.Найти(Нрег(Поле["Name"])) <> Неопределено Тогда
		    Продолжить;
		КонецЕсли;
		ОписаниеТипа = ОписаниеТипаСтрока;
		Тип = get_prop(Поле, "ValueType");
		Если Тип <> Неопределено Тогда
			Если Тип = "Соответствие" Тогда
				ОписаниеТипа = Новый ОписаниеТипов();
			Иначе
				// Для множественного выбора, перопределяем тип реквизита на форме в список значений
				Если ВРег(Поле["FieldType"]) = "ПОЛЕСВЯЗИ" И Поле["Properties"]["MULTI"] = Истина Тогда
					ОписаниеТипа = Новый ОписаниеТипов("СписокЗначений");
				Иначе
					ОписаниеТипа = Новый ОписаниеТипов(Поле["ValueType"]);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Рек = Новый РеквизитФормы(Поле["Name"], ОписаниеТипа);
		Реквизиты.Добавить(Рек);
	КонецЦикла;
	ИзменитьРеквизиты(Реквизиты);
КонецПроцедуры

Процедура ЗаполнитьСвойстваЭлементаФормы(ЭлементФормы, Свойства)
	
	Для Каждого Свойство Из Свойства Цикл
		Если Свойство.Ключ = "СписокВыбора" Тогда
			Для Каждого ЗначениеСписка Из Свойство.Значение Цикл
				ЭлементФормы[Свойство.Ключ].Добавить(ЗначениеСписка);
			КонецЦикла;
		Иначе
			ЭлементФормы[Свойство.Ключ]	 = Свойство.Значение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		ЭтотОбъект[ИсточникВыбора.FILTER_NAME].Очистить();
		Для Каждого ЭлементМассива Из ДанныеФильтра.ПараметрыОтображения Цикл
			Если ЭлементМассива["Name"] <> ИсточникВыбора.FILTER_NAME Тогда 
				Продолжить;
			КонецЕсли;	
			Для Каждого ВыбранныйЭлемент Из ВыбранноеЗначение Цикл
				ЭтотОбъект[ИсточникВыбора.FILTER_NAME].Добавить(ВыбранныйЭлемент.Ссылка);
			КонецЦикла;	
		КонецЦикла;
		Возврат;
	КонецЕсли;
	ЭтотОбъект[ИсточникВыбора.FILTER_NAME] = Неопределено;
	Для Каждого ЭлементМассива Из ДанныеФильтра.ПараметрыОтображения Цикл
		Если ЭлементМассива["Name"] <> ИсточникВыбора.FILTER_NAME Тогда 
			Продолжить;
		КонецЕсли;	
		// Значение выбрано единичное, но если тип - список, то добавляем в него
		Если ЭлементМассива["ValueType"] = "СписокЗначений" Тогда
			ЭтотОбъект[ИсточникВыбора.FILTER_NAME].Добавить(ВыбранноеЗначение.Ссылка);
		Иначе
			ЭтотОбъект[ИсточникВыбора.FILTER_NAME] = ВыбранноеЗначение.Ссылка;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолеСвязиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = Ложь;
	Для Каждого ЭлементФильтра Из ДанныеФильтра.ПараметрыОтображения Цикл
		Если ЭлементФильтра["Name"] <> Элемент.Имя Тогда
			Продолжить;
		Конецесли;
		
		СвойстваЭлементаФильтра = ЭлементФильтра["Properties"];
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("FILTER_NAME", ЭлементФильтра["Name"]);
		ПараметрыФормы.Вставить("ВидДанных1С", "");
		ПараметрыФормы.Вставить("ТипДанных1С", ЭлементФильтра["ValueType"]);
		ЭлементыСтроки = СтрРазделить82(ЭлементФильтра["ValueType"], ".");
		Если ЭлементыСтроки.Количество() > 1 Тогда
			ПараметрыФормы.Вставить("ВидДанных1С", ЭлементыСтроки[0]);
			ПараметрыФормы.Вставить("ТипДанных1С", ЭлементыСтроки[1]);
		КонецЕсли;
		ПараметрыФормы.Вставить("INI", СвойстваЭлементаФильтра["INI"] + "_list");
		ПараметрыФормы.Вставить("ENDPOINT", СвойстваЭлементаФильтра["ENDPOINT"]);
		ПараметрыФормы.Вставить("CONST_FILTER", СвойстваЭлементаФильтра["CONST_FILTER"]);
		ПараметрыФормы.Вставить("FILTER", СвойстваЭлементаФильтра["FILTER"]);
		ПараметрыФормы.Вставить("MULTI", СвойстваЭлементаФильтра["MULTI"]);
		
		Форма = ПолучитьФормуОбработки("ДиалогВыбораИзСписка", ПутьКФормамОбработки(), ПараметрыФормы, ЭтаФорма);
		Форма.Открыть();
	КонецЦикла;
КонецПроцедуры

