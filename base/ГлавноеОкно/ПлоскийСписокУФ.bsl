
&НаСервере
Процедура ЗаполнитьВидимостьКолонкиПлоскогоСписка(ТабПоле,Колонка,ЭлемФормы,ИмяТаблицы,ГруппаКолонок) 
	ВидимостьКолонки = get_prop(Колонка, "Visibility", get_prop(Колонка, "VISIBLE", Ложь));
	Если ВидимостьКолонки = Ложь Тогда
		Возврат;
	КонецЕсли;	
	ШаблонКолонки = get_prop(Колонка, "TEMPLATE");
	Если ШаблонКолонки = "column_icon" Тогда
		Элем = ЭлемФормы.Добавить(ИмяТаблицы + Колонка["NAME"], Тип("ПолеФормы"), ГруппаКолонок);
		ТекущийРаздел.ЭлементыФормы.Добавить(ИмяТаблицы + Колонка["NAME"]);
		Элем.ПутьКДанным = ИмяТаблицы + "." + Колонка["NAME"];
		Элем.Заголовок = Колонка["TITLE"];
		Элем.Вид = ВидПоляФормы.ПолеКартинки;
		Элем.КартинкаЗначений = ЭлемФормы[Колонка["ICONS"]].Картинка; 
		Возврат;
	КонецЕсли;
	Если get_prop(Колонка, "More") = Истина Тогда
		
		Родитель = ЭлемФормы.Добавить(ИмяТаблицы + Колонка["Name"] + "ЗагрузитьЕще", Тип("ГруппаФормы"), ГруппаКолонок);
		Родитель.Вид = ВидГруппыФормы.ГруппаКолонок;
		ТекущийРаздел.ЭлементыФормы.Добавить(ИмяТаблицы + Колонка["Name"] + "ЗагрузитьЕще");
		Элем = ЭлемФормы.Добавить(ИмяТаблицы + "ЗагрузитьЕще", Тип("ПолеФормы"), Родитель);
		Элем.Вид = ВидПоляФормы.ПолеНадписи;
		Элем.ГиперссылкаЯчейки = Истина;
		Элем.ПутьКДанным = ИмяТаблицы + "." + "ЗагрузитьЕще";
		Элем.ОтображатьВШапке = Ложь;
		Элем.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
		Элем = ЭлемФормы.Добавить(ИмяТаблицы + Колонка["Name"], Тип("ПолеФормы"), Родитель);
	Иначе	
		Элем = ЭлемФормы.Добавить(ИмяТаблицы + Колонка["Name"], Тип("ПолеФормы"), ГруппаКолонок);
		ТекущийРаздел.ЭлементыФормы.Добавить(ИмяТаблицы + Колонка["Name"]);
	КонецЕсли;
	Элем.Вид = ВидПоляФормы.ПолеНадписи;
	Элем.ПутьКДанным = ИмяТаблицы + "." + Колонка["Name"];
	Элем.Заголовок = Колонка["Title"];
	Если get_prop(Колонка, "Properties") <> Неопределено Тогда 
		Для Каждого СвойствоПоля Из Колонка["Properties"] Цикл
			КлючСвойства = СвойствоПоля.Ключ;
			Если КлючСвойства = "Ширина" Тогда  
				Продолжить;
			КонецЕсли;
			Элем[СвойствоПоля.Ключ] = СвойствоПоля.Значение;
		КонецЦикла;
	КонецЕсли;
	Картинка = get_prop(Колонка, "RowIcon");
	Если Картинка <> Неопределено Тогда
		Элем.Вид = ВидПоляФормы.ПолеКартинки;
		Элем.КартинкаЗначений = ЭлемФормы[Картинка].Картинка
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКолонкиПлоскогоСписка() Экспорт
	ЭлемФормы = ПолучитьЭлементыФормыНаСервере();
	ИмяТаблицы = ТекущийРаздел["Шаблон"];
	
	ТабПоле = ЭлемФормы[ИмяТаблицы];
	Таблица = ДанныеФормыВЗначение(ЭтаФорма[ИмяТаблицы], Тип("ТаблицаЗначений"));
	Таблица.Очистить();
	Таблица.Колонки.Очистить();
		
	СоздатьРеквизитыФормыПлоскийСписок(Таблица, ИмяТаблицы);
	
	Если ТекущийРаздел.Свойство("ЭлементыФормы") Тогда
		Для Каждого Элем Из ТекущийРаздел.ЭлементыФормы Цикл
			ЭлемФормы.Удалить(ЭлемФормы.Найти(Элем));
		КонецЦикла;
		ТекущийРаздел.ЭлементыФормы.Очистить();
	Иначе
		ТекущийРаздел.Вставить("ЭлементыФормы", Новый Массив());
	КонецЕсли;

	ГруппаКолонок = ЭлемФормы.Добавить(ИмяТаблицы + "ГруппаКолонок", Тип("ГруппаФормы"), ТабПоле);
	ГруппаКолонок.Вид = ВидГруппыФормы.ГруппаКолонок;
	ГруппаКолонок.ФиксацияВТаблице = ФиксацияВТаблице.Лево;
	ГруппаКолонок.Группировка = ГруппировкаКолонок.Горизонтальная;
	ГруппаКолонок.ОтображатьВШапке  = Ложь;
	ГруппаКолонок.РастягиватьПоГоризонтали = Ложь;
	
	Элем = ЭлемФормы.Добавить(ИмяТаблицы + "Отмечен", Тип("ПолеФормы"), ГруппаКолонок);
	Элем.Вид = ВидПоляФормы.ПолеФлажка;
	Элем.ПутьКДанным = ИмяТаблицы + "." + "Отмечен"; 
	ТекущийРаздел.ЭлементыФормы.Добавить(ИмяТаблицы + "Отмечен");
	
	ЭлемФормы.ПлоскийСписок.РежимВыделения = РежимВыделенияТаблицы.Одиночный;
	Если get_prop(ТекущийРаздел, "МножественныйВыбор") <> Истина Тогда
		Элем.Видимость = Ложь;
		ЭлемФормы.ОтметитьВсеПлоскийСписок.Видимость = Ложь;
	КонецЕсли;
	
	Для Каждого Колонка Из ТекущийРаздел.ПараметрыОтображения["Columns"] Цикл
		ЗаполнитьВидимостьКолонкиПлоскогоСписка(ТабПоле,Колонка,ЭлемФормы,ИмяТаблицы,ГруппаКолонок);		
	КонецЦикла; 
	ТекущийРаздел.ЭлементыФормы.Добавить(ИмяТаблицы + "ГруппаКолонок");
	ЗначениеВДанныеФормы(Таблица, ЭтаФорма[ИмяТаблицы]);
	УстановитьУсловноеОформление();
КонецПроцедуры

Процедура СоздатьРеквизитыФормыПлоскийСписок(Таблица, ИмяТаблицы)
	РеквизитыУдалить = Новый Массив();
	Реквизиты = Новый Массив();
	СоздатьРеквизитыТаблицыФормы(Таблица, ИмяТаблицы, Реквизиты, РеквизитыУдалить);
	
	Рек = Новый РеквизитФормы("Отмечен", Новый ОписаниеТипов("Булево"), ИмяТаблицы);
	Реквизиты.Добавить(Рек);
	Таблица.Колонки.Добавить("Отмечен", Новый ОписаниеТипов("Булево"));
	
	ИзменитьРеквизиты(Реквизиты, РеквизитыУдалить);
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	//
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Представление = "СозданПрограммно";
	//Отбор
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПлоскийСписок.ЗагрузитьЕще");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	//Оформление
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	//Поле оформления
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ПлоскийСписокЗагрузитьЕще");
	
	//
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Представление = "СозданПрограммно";
	//Отбор
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПлоскийСписок.ЗагрузитьЕще");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Заполнено;
	
	//Оформление
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	//Поле оформления
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ПлоскийСписокОтмечен");
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ПлоскийСписокСтатусСБИС");
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ПлоскийСписокСтатус1С");
	
КонецПроцедуры

